name: Release

on:
  release:
    types: [published]

jobs:
  cancel_running_workflows:
    name: Cancel running workflows
    runs-on: ubuntu-22.04
    steps:
      - name: cancel running workflows
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

  build_deb:
    name: Build debian package
    runs-on: babylon-runner
    outputs:
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
    permissions:
      id-token: write
      contents: read
      pull-requests: read
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            radixdlt/babylon-node
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}-deb
          restore-keys: ${{ runner.os }}-gradle-deb
      - id: auth
        uses: google-github-actions/auth@a61909d048e0be579b6c15b27088d19668493851
        with:
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDP }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@d51b5346f85640ec2aa2fa057354d2b82c2fcbce'
      - name: 'Register gcloud as Docker credential helper'
        run: |
            gcloud auth configure-docker -q
      - name: Create deb package
        run: |
            sudo apt-get update && sudo apt-get install make
            cd core && make build-core
      - name: Upload generated debian package
        uses: actions/upload-artifact@v3.1.0
        with:
          name: deb4docker
          path: "${{ github.workspace }}/docker/*.deb"


  build_push_container:
    name: Build core node docker container
    needs:
      - build_deb
    runs-on: ubuntu-22.04
    environment: release
    permissions:
      id-token: write
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Download generated debian package
        uses: actions/download-artifact@v3
        with:
          name: deb4docker
          path: docker
      - name: Display structure of downloaded files
        run: ls -R docker
      - name: "Configure AWS credentials"
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::308190735829:role/gh-babylon-node-dockerhub-releaser
          aws-region: eu-west-2
      - name: Read secrets from AWS Secrets Manager into environment variables
        uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: |
            DOCKERHUB, gh-actions/radixdtl/babylon-node/release-credentials
          parse-json-secrets: true
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{env.DOCKERHUB_USERNAME}}
          password: ${{env.DOCKERHUB_TOKEN}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          file: ./docker/Dockerfile.core
          context: docker
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ needs.build_deb.outputs.tags }}
          labels: ${{ needs.build_deb.outputs.labels }}
