/*
 * (C) Copyright 2020 Radix DLT Ltd
 *
 * Radix DLT Ltd licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of the
 * License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied.  See the License for the specific
 * language governing permissions and limitations under the License.
 */

plugins {
    id 'nebula.ospackage' version '5.3.5'
    id 'com.github.johnrengelman.shadow' version '2.0.3'
    id 'me.champeau.gradle.jmh' version '0.4.7'
    id 'org.sonarqube' version '3.0'
    id 'com.adarshr.test-logger' version '1.7.1'
    id 'com.palantir.git-version' version '0.12.3'
    id 'com.moowork.node' version '1.2.0'
}

repositories {
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
}

def radixVersion() {
    def details = versionDetails()
    def version
    if (details.isCleanTag) {
        version = details.lastTag
    } else {
        version = details.branchName
        if (version == null) {
            version = "${details.lastTag}-detachedhead-${details.gitHash}"
        } else {
            // Prepend last tag so builddeb doesn't choke on non-numeric branch names
            version = "${details.lastTag}-${version}"
            version = version.replaceAll('/', '-')
        }
        version = "${version}-SNAPSHOT"
    }
    return version
}

group 'com.radixdlt'
version radixVersion()

subprojects {
    version = rootProject.version

    configurations.all {
        resolutionStrategy {
            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
            failOnVersionConflict()
        }
    }

    apply plugin: 'java'

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.pkg.github.com/radixdlt/maven-packages' }
        maven { url 'https://jitpack.io' }
    }

    targetCompatibility = 1.8
    sourceCompatibility = 1.8

    task showRepos {
        doLast {
            println "All repos:"
            println repositories.collect { it.url }
        }
    }
}
