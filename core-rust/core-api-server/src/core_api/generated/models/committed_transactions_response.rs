/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct CommittedTransactionsResponse {
    /// An integer between 1 and 10^13, giving the first (resultant) state version in the returned response
    #[serde(rename = "from_state_version")]
    pub from_state_version: i64,
    /// An integer between 1 and 10^13, giving the final (resultant) state version in the returned response
    #[serde(rename = "to_state_version")]
    pub to_state_version: i64,
    /// An integer between 1 and 10^13, giving the maximum state version currently committed
    #[serde(rename = "max_state_version")]
    pub max_state_version: i64,
    /// A committed transactions list starting from the `from_state_version` (inclusive).
    #[serde(rename = "transactions")]
    pub transactions: Vec<crate::core_api::generated::models::CommittedTransaction>,
}

impl CommittedTransactionsResponse {
    pub fn new(from_state_version: i64, to_state_version: i64, max_state_version: i64, transactions: Vec<crate::core_api::generated::models::CommittedTransaction>) -> CommittedTransactionsResponse {
        CommittedTransactionsResponse {
            from_state_version,
            to_state_version,
            max_state_version,
            transactions,
        }
    }
}


