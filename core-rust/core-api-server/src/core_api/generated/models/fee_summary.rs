/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// FeeSummary : Fees paid



#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct FeeSummary {
    /// Specifies whether the transaction execution loan has been fully repaid.
    #[serde(rename = "loan_fully_repaid")]
    pub loan_fully_repaid: bool,
    /// An integer between `0` and `2^32 - 1`, representing the maximum amount of cost units available for the transaction execution.
    #[serde(rename = "cost_unit_limit")]
    pub cost_unit_limit: i64,
    /// An integer between `0` and `2^32 - 1`, representing the amount of cost units consumed by the transaction execution.
    #[serde(rename = "cost_unit_consumed")]
    pub cost_unit_consumed: i64,
    /// A decimal-string-encoded integer between `0` and `2^255 - 1`, which represents the total number of `10^(-18)` subunits in the XRD price of a single cost unit. 
    #[serde(rename = "cost_unit_price_attos")]
    pub cost_unit_price_attos: String,
    /// An integer between `0` and `2^32 - 1`, specifying the validator tip as a percentage amount. A value of `1` corresponds to 1% of the fee.
    #[serde(rename = "tip_percentage")]
    pub tip_percentage: i64,
    /// A decimal-string-encoded integer between `0` and `2^255 - 1`, which represents the total number of `10^(-18)` subunits in the total amount of XRD burned in the transaction. 
    #[serde(rename = "xrd_burned_attos")]
    pub xrd_burned_attos: String,
    /// A decimal-string-encoded integer between `0` and `2^255 - 1`, which represents the total number of `10^(-18)` subunits in the total amount of XRD tipped to validators in the transaction. 
    #[serde(rename = "xrd_tipped_attos")]
    pub xrd_tipped_attos: String,
}

impl FeeSummary {
    /// Fees paid
    pub fn new(loan_fully_repaid: bool, cost_unit_limit: i64, cost_unit_consumed: i64, cost_unit_price_attos: String, tip_percentage: i64, xrd_burned_attos: String, xrd_tipped_attos: String) -> FeeSummary {
        FeeSummary {
            loan_fully_repaid,
            cost_unit_limit,
            cost_unit_consumed,
            cost_unit_price_attos,
            tip_percentage,
            xrd_burned_attos,
            xrd_tipped_attos,
        }
    }
}


