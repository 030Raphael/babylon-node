/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */

/// FeeSummary : Fees paid



#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct FeeSummary {
    /// Specifies whether the transaction execution loan has been fully repaid.
    #[serde(rename = "loan_fully_repaid")]
    pub loan_fully_repaid: bool,
    /// Maximum amount of cost units available for the transaction execution. A decimal 32-bit unsigned integer.
    #[serde(rename = "cost_unit_limit")]
    pub cost_unit_limit: String,
    /// The amount of cost units consumed by the transaction execution. A decimal 32-bit unsigned integer.
    #[serde(rename = "cost_unit_consumed")]
    pub cost_unit_consumed: String,
    /// The XRD price of a single cost unit. A fixed-scale 256-bit signed decimal number.
    #[serde(rename = "cost_unit_price")]
    pub cost_unit_price: String,
    /// The validator tip. A decimal 32-bit unsigned integer, representing the percentage amount (a value of \"1\" corresponds to 1%).
    #[serde(rename = "tip_percentage")]
    pub tip_percentage: String,
    /// The total amount of XRD burned. A fixed-scale 256-bit signed decimal number.
    #[serde(rename = "xrd_burned")]
    pub xrd_burned: String,
    /// The total amount of XRD tipped to validators. A fixed-scale 256-bit signed decimal number.
    #[serde(rename = "xrd_tipped")]
    pub xrd_tipped: String,
}

impl FeeSummary {
    /// Fees paid
    pub fn new(loan_fully_repaid: bool, cost_unit_limit: String, cost_unit_consumed: String, cost_unit_price: String, tip_percentage: String, xrd_burned: String, xrd_tipped: String) -> FeeSummary {
        FeeSummary {
            loan_fully_repaid,
            cost_unit_limit,
            cost_unit_consumed,
            cost_unit_price,
            tip_percentage,
            xrd_burned,
            xrd_tipped,
        }
    }
}


