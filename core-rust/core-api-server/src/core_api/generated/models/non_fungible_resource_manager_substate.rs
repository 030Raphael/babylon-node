/*
 * Babylon Core API
 *
 * This API is exposed by the Babylon Radix node to give clients access to the Radix Engine, Mempool and State in the node. It is intended for use by node-runners on a private network, and is not intended to be exposed publicly. Heavy load may impact the node's function.  If you require queries against historical ledger state, you may also wish to consider using the [Gateway API](https://betanet-gateway.redoc.ly/). 
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct NonFungibleResourceManagerSubstate {
    #[serde(rename = "substate_type")]
    pub substate_type: crate::core_api::generated::models::SubstateType,
    #[serde(rename = "non_fungible_id_type")]
    pub non_fungible_id_type: crate::core_api::generated::models::NonFungibleIdType,
    /// The string-encoded decimal representing the total supply of this resource. A decimal is formed of some signed integer `m` of attos (`10^(-18)`) units, where `-2^(256 - 1) <= m < 2^(256 - 1)`. 
    #[serde(rename = "total_supply")]
    pub total_supply: String,
    #[serde(rename = "non_fungible_data_table")]
    pub non_fungible_data_table: Box<crate::core_api::generated::models::EntityReference>,
    #[serde(rename = "non_fungible_data_type_index")]
    pub non_fungible_data_type_index: Box<crate::core_api::generated::models::LocalTypeIndex>,
    /// The field names of the NF Metadata which are mutable. 
    #[serde(rename = "non_fungible_data_mutable_fields")]
    pub non_fungible_data_mutable_fields: Vec<String>,
}

impl NonFungibleResourceManagerSubstate {
    pub fn new(substate_type: crate::core_api::generated::models::SubstateType, non_fungible_id_type: crate::core_api::generated::models::NonFungibleIdType, total_supply: String, non_fungible_data_table: crate::core_api::generated::models::EntityReference, non_fungible_data_type_index: crate::core_api::generated::models::LocalTypeIndex, non_fungible_data_mutable_fields: Vec<String>) -> NonFungibleResourceManagerSubstate {
        NonFungibleResourceManagerSubstate {
            substate_type,
            non_fungible_id_type,
            total_supply,
            non_fungible_data_table: Box::new(non_fungible_data_table),
            non_fungible_data_type_index: Box::new(non_fungible_data_type_index),
            non_fungible_data_mutable_fields,
        }
    }
}


