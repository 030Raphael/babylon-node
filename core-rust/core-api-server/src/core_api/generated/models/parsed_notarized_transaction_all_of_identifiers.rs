/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct ParsedNotarizedTransactionAllOfIdentifiers {
    /// The hex-encoded transaction intent hash. This is also known as the Transaction Identifier hash for user transactions. This hash is SHA256(SHA256(compiled_intent))
    #[serde(rename = "intent_hash")]
    pub intent_hash: String,
    /// The hex-encoded signed transaction hash. This is the hash which is signed as part of notarization. This hash is SHA256(SHA256(compiled_signed_transaction))
    #[serde(rename = "signatures_hash")]
    pub signatures_hash: String,
    /// The hex-encoded notarized transaction hash. This is also known as the payload hash. This hash is SHA256(SHA256(compiled_notarized_transaction))
    #[serde(rename = "payload_hash")]
    pub payload_hash: String,
    /// The hex-encoded ledger-wrapped transaction hash. This hash is SHA256(SHA256(ledger_transaction_bytes))
    #[serde(rename = "ledger_hash")]
    pub ledger_hash: String,
}

impl ParsedNotarizedTransactionAllOfIdentifiers {
    pub fn new(intent_hash: String, signatures_hash: String, payload_hash: String, ledger_hash: String) -> ParsedNotarizedTransactionAllOfIdentifiers {
        ParsedNotarizedTransactionAllOfIdentifiers {
            intent_hash,
            signatures_hash,
            payload_hash,
            ledger_hash,
        }
    }
}


