/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct ResourceManagerSubstateAllOf {
    #[serde(rename = "resource_type")]
    pub resource_type: crate::core_api::generated::models::ResourceType,
    #[serde(rename = "fungible_divisibility", skip_serializing_if = "Option::is_none")]
    pub fungible_divisibility: Option<u32>,
    #[serde(rename = "metadata")]
    pub metadata: Vec<crate::core_api::generated::models::ResourceManagerSubstateAllOfMetadata>,
    #[serde(rename = "total_supply")]
    pub total_supply: String,
}

impl ResourceManagerSubstateAllOf {
    pub fn new(resource_type: crate::core_api::generated::models::ResourceType, metadata: Vec<crate::core_api::generated::models::ResourceManagerSubstateAllOfMetadata>, total_supply: String) -> ResourceManagerSubstateAllOf {
        ResourceManagerSubstateAllOf {
            resource_type,
            fungible_divisibility: None,
            metadata,
            total_supply,
        }
    }
}


