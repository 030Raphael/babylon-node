/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct TimeUpdateValidatorTransaction {
    #[serde(rename = "type")]
    pub _type: crate::core_api::generated::models::ValidatorTransactionType,
    /// An integer between `0` and `10^14`, marking the round proposer's unix timestamp in ms
    #[serde(rename = "proposer_timestamp_ms")]
    pub proposer_timestamp_ms: i64,
    /// An integer between `0` and `10^10`, marking the consensus epoch. Note that currently this is not the same as `scrypto_epoch`, but eventually will be. 
    #[serde(rename = "consensus_epoch")]
    pub consensus_epoch: i64,
    /// An integer between `0` and `10^10`, marking the consensus round in the epoch
    #[serde(rename = "round_in_epoch")]
    pub round_in_epoch: i64,
}

impl TimeUpdateValidatorTransaction {
    pub fn new(_type: crate::core_api::generated::models::ValidatorTransactionType, proposer_timestamp_ms: i64, consensus_epoch: i64, round_in_epoch: i64) -> TimeUpdateValidatorTransaction {
        TimeUpdateValidatorTransaction {
            _type,
            proposer_timestamp_ms,
            consensus_epoch,
            round_in_epoch,
        }
    }
}


