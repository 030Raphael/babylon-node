/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct UpSubstate {
    /// SBOR-encoded and then hex-encoded substate ID.
    #[serde(rename = "substate_id")]
    pub substate_id: String,
    /// A decimal 32-bit unsigned integer
    #[serde(rename = "version")]
    pub version: String,
    /// SBOR-encoded and then hex-encoded substate bytes.
    #[serde(rename = "substate_bytes")]
    pub substate_bytes: String,
    #[serde(rename = "substate_json_type")]
    pub substate_json_type: crate::core_api::generated::models::TemporaryUpSubstateJsonPayloadType,
    /// JSON-encoded (and then stringified) substate model. Warning! This is temporary property until we get proper polymorphism in place.
    #[serde(rename = "substate_json_str")]
    pub substate_json_str: String,
}

impl UpSubstate {
    pub fn new(substate_id: String, version: String, substate_bytes: String, substate_json_type: crate::core_api::generated::models::TemporaryUpSubstateJsonPayloadType, substate_json_str: String) -> UpSubstate {
        UpSubstate {
            substate_id,
            version,
            substate_bytes,
            substate_json_type,
            substate_json_str,
        }
    }
}


