/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct UpSubstate {
    #[serde(rename = "substate_id")]
    pub substate_id: Box<crate::core_api::generated::models::SubstateId>,
    /// A decimal 32-bit unsigned integer
    #[serde(rename = "version")]
    pub version: String,
    /// SBOR-encoded and then hex-encoded substate data bytes.
    #[serde(rename = "substate_bytes")]
    pub substate_bytes: String,
    /// A hex-encoded hash of the substate data bytes, SHA256(SHA256(substate_bytes)).
    #[serde(rename = "substate_data_hash")]
    pub substate_data_hash: String,
    #[serde(rename = "substate_data")]
    pub substate_data: Option<crate::core_api::generated::models::Substate>, // Using Option permits Default trait; Will always be Some in normal use
}

impl UpSubstate {
    pub fn new(substate_id: crate::core_api::generated::models::SubstateId, version: String, substate_bytes: String, substate_data_hash: String, substate_data: crate::core_api::generated::models::Substate) -> UpSubstate {
        UpSubstate {
            substate_id: Box::new(substate_id),
            version,
            substate_bytes,
            substate_data_hash,
            substate_data: Option::Some(substate_data),
        }
    }
}


