/*
 * Babylon Core API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, serde::Serialize, serde::Deserialize)]
pub struct V0TransactionStatusResponse {
    /// The status of the transaction intent
    #[serde(rename = "intent_status", skip_serializing_if = "Option::is_none")]
    pub intent_status: Option<IntentStatus>,
    #[serde(rename = "known_payloads")]
    pub known_payloads: Vec<crate::core_api::generated::models::V0TransactionPayloadStatus>,
}

impl V0TransactionStatusResponse {
    pub fn new(known_payloads: Vec<crate::core_api::generated::models::V0TransactionPayloadStatus>) -> V0TransactionStatusResponse {
        V0TransactionStatusResponse {
            intent_status: None,
            known_payloads,
        }
    }
}

/// The status of the transaction intent
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, serde::Serialize, serde::Deserialize)]
pub enum IntentStatus {
    #[serde(rename = "CommittedSuccess")]
    CommittedSuccess,
    #[serde(rename = "CommittedFailure")]
    CommittedFailure,
    #[serde(rename = "InMempool")]
    InMempool,
    #[serde(rename = "Rejected")]
    Rejected,
    #[serde(rename = "Unknown")]
    Unknown,
}

impl Default for IntentStatus {
    fn default() -> IntentStatus {
        Self::CommittedSuccess
    }
}

