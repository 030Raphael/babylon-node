/*
 * Browse API
 * This API provides a complete view of the current ledger state, operating at a relatively low level (i.e. returning Entities' data and type information in a generic way, without interpreting specifics of different native or custom components).  It mirrors how the Radix Engine views the ledger state in its \"System\" layer, and thus can be useful for Scrypto developers, who need to inspect how the Engine models and stores their application's state, or how an interface / authentication scheme of another component looks like. 
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.browse.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.browse.generated.models.ModuleId;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * BrowseObjectFieldRequest
 */
@JsonPropertyOrder({
  BrowseObjectFieldRequest.JSON_PROPERTY_ENTITY_ADDRESS,
  BrowseObjectFieldRequest.JSON_PROPERTY_MODULE_ID,
  BrowseObjectFieldRequest.JSON_PROPERTY_FIELD_NAME,
  BrowseObjectFieldRequest.JSON_PROPERTY_FIELD_INDEX
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class BrowseObjectFieldRequest {
  public static final String JSON_PROPERTY_ENTITY_ADDRESS = "entity_address";
  private String entityAddress;

  public static final String JSON_PROPERTY_MODULE_ID = "module_id";
  private ModuleId moduleId;

  public static final String JSON_PROPERTY_FIELD_NAME = "field_name";
  private String fieldName;

  public static final String JSON_PROPERTY_FIELD_INDEX = "field_index";
  private Integer fieldIndex;

  public BrowseObjectFieldRequest() { 
  }

  public BrowseObjectFieldRequest entityAddress(String entityAddress) {
    this.entityAddress = entityAddress;
    return this;
  }

   /**
   * A Bech32m-encoded, human readable rendering of an arbitrary Entity&#39;s address.
   * @return entityAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A Bech32m-encoded, human readable rendering of an arbitrary Entity's address.")
  @JsonProperty(JSON_PROPERTY_ENTITY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEntityAddress() {
    return entityAddress;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntityAddress(String entityAddress) {
    this.entityAddress = entityAddress;
  }


  public BrowseObjectFieldRequest moduleId(ModuleId moduleId) {
    this.moduleId = moduleId;
    return this;
  }

   /**
   * Get moduleId
   * @return moduleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_MODULE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public ModuleId getModuleId() {
    return moduleId;
  }


  @JsonProperty(JSON_PROPERTY_MODULE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setModuleId(ModuleId moduleId) {
    this.moduleId = moduleId;
  }


  public BrowseObjectFieldRequest fieldName(String fieldName) {
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Name of the field to read. Either this or &#x60;field_index&#x60; is required.
   * @return fieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the field to read. Either this or `field_index` is required.")
  @JsonProperty(JSON_PROPERTY_FIELD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFieldName() {
    return fieldName;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }


  public BrowseObjectFieldRequest fieldIndex(Integer fieldIndex) {
    this.fieldIndex = fieldIndex;
    return this;
  }

   /**
   * Index of the field to read. Either this or &#x60;field_name&#x60; is required.
   * minimum: 0
   * maximum: 255
   * @return fieldIndex
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Index of the field to read. Either this or `field_name` is required.")
  @JsonProperty(JSON_PROPERTY_FIELD_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFieldIndex() {
    return fieldIndex;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_INDEX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFieldIndex(Integer fieldIndex) {
    this.fieldIndex = fieldIndex;
  }


  /**
   * Return true if this BrowseObjectFieldRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BrowseObjectFieldRequest browseObjectFieldRequest = (BrowseObjectFieldRequest) o;
    return Objects.equals(this.entityAddress, browseObjectFieldRequest.entityAddress) &&
        Objects.equals(this.moduleId, browseObjectFieldRequest.moduleId) &&
        Objects.equals(this.fieldName, browseObjectFieldRequest.fieldName) &&
        Objects.equals(this.fieldIndex, browseObjectFieldRequest.fieldIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityAddress, moduleId, fieldName, fieldIndex);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BrowseObjectFieldRequest {\n");
    sb.append("    entityAddress: ").append(toIndentedString(entityAddress)).append("\n");
    sb.append("    moduleId: ").append(toIndentedString(moduleId)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    fieldIndex: ").append(toIndentedString(fieldIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

