/*
 * Radix Core API
 * This API is exposed by the Babylon Radix node to give clients access to the Radix Engine, Mempool and State in the node.  The default configuration is intended for use by node-runners on a private network, and is not intended to be exposed publicly. Very heavy load may impact the node's function. The node exposes a configuration flag which allows disabling certain endpoints which may be problematic, but monitoring is advised. This configuration parameter is `api.core.flags.enable_unbounded_endpoints` / `RADIXDLT_CORE_API_FLAGS_ENABLE_UNBOUNDED_ENDPOINTS`.  This API exposes queries against the node's current state (see `/lts/state/` or `/state/`), and streams of transaction history (under `/lts/stream/` or `/stream`).  If you require queries against snapshots of historical ledger state, you may also wish to consider using the [Gateway API](https://docs-babylon.radixdlt.com/).  ## Integration and forward compatibility guarantees  Integrators (such as exchanges) are recommended to use the `/lts/` endpoints - they have been designed to be clear and simple for integrators wishing to create and monitor transactions involving fungible transfers to/from accounts.  All endpoints under `/lts/` have high guarantees of forward compatibility in future node versions. We may add new fields, but existing fields will not be changed. Assuming the integrating code uses a permissive JSON parser which ignores unknown fields, any additions will not affect existing code.  Other endpoints may be changed with new node versions carrying protocol-updates, although any breaking changes will be flagged clearly in the corresponding release notes.  All responses may have additional fields added, so clients are advised to use JSON parsers which ignore unknown fields on JSON objects. 
 *
 * The version of the OpenAPI document: v1.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.core.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Represents a proof from the execution of the babylon genesis protocol update, which starts the babylon-node ledger.  Behind-the-scenes, this is now the same as a &#x60;ProtocolUpdateLedgerProofOrigin&#x60;, but is kept separate for backwards-compatibility.  NOTE: Some of these values may be placeholder values on nodes which haven&#39;t resynced since Cuttlefish. In particular, the following values might be invalid on such nodes:  * &#x60;batch_group_idx&#x60; (placeholder of 0) * &#x60;batch_group_name&#x60; (placeholder of \&quot;\&quot;) * &#x60;batch_idx&#x60; (placeholder of 0) * &#x60;batch_name&#x60; (placeholder of \&quot;\&quot;) * &#x60;is_end_of_update&#x60; (placeholder of false) 
 */
@ApiModel(description = "Represents a proof from the execution of the babylon genesis protocol update, which starts the babylon-node ledger.  Behind-the-scenes, this is now the same as a `ProtocolUpdateLedgerProofOrigin`, but is kept separate for backwards-compatibility.  NOTE: Some of these values may be placeholder values on nodes which haven't resynced since Cuttlefish. In particular, the following values might be invalid on such nodes:  * `batch_group_idx` (placeholder of 0) * `batch_group_name` (placeholder of \"\") * `batch_idx` (placeholder of 0) * `batch_name` (placeholder of \"\") * `is_end_of_update` (placeholder of false) ")
@JsonPropertyOrder({
  GenesisLedgerProofOriginAllOf.JSON_PROPERTY_PROTOCOL_VERSION_NAME,
  GenesisLedgerProofOriginAllOf.JSON_PROPERTY_GENESIS_OPAQUE_HASH,
  GenesisLedgerProofOriginAllOf.JSON_PROPERTY_BATCH_GROUP_IDX,
  GenesisLedgerProofOriginAllOf.JSON_PROPERTY_BATCH_GROUP_NAME,
  GenesisLedgerProofOriginAllOf.JSON_PROPERTY_BATCH_IDX,
  GenesisLedgerProofOriginAllOf.JSON_PROPERTY_BATCH_NAME,
  GenesisLedgerProofOriginAllOf.JSON_PROPERTY_IS_END_OF_UPDATE
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GenesisLedgerProofOriginAllOf {
  public static final String JSON_PROPERTY_PROTOCOL_VERSION_NAME = "protocol_version_name";
  private String protocolVersionName;

  public static final String JSON_PROPERTY_GENESIS_OPAQUE_HASH = "genesis_opaque_hash";
  private String genesisOpaqueHash;

  public static final String JSON_PROPERTY_BATCH_GROUP_IDX = "batch_group_idx";
  private Long batchGroupIdx;

  public static final String JSON_PROPERTY_BATCH_GROUP_NAME = "batch_group_name";
  private String batchGroupName;

  public static final String JSON_PROPERTY_BATCH_IDX = "batch_idx";
  private Long batchIdx;

  public static final String JSON_PROPERTY_BATCH_NAME = "batch_name";
  private String batchName;

  public static final String JSON_PROPERTY_IS_END_OF_UPDATE = "is_end_of_update";
  private Boolean isEndOfUpdate;

  public GenesisLedgerProofOriginAllOf() { 
  }

  public GenesisLedgerProofOriginAllOf protocolVersionName(String protocolVersionName) {
    this.protocolVersionName = protocolVersionName;
    return this;
  }

   /**
   * Get protocolVersionName
   * @return protocolVersionName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PROTOCOL_VERSION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getProtocolVersionName() {
    return protocolVersionName;
  }


  @JsonProperty(JSON_PROPERTY_PROTOCOL_VERSION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProtocolVersionName(String protocolVersionName) {
    this.protocolVersionName = protocolVersionName;
  }


  public GenesisLedgerProofOriginAllOf genesisOpaqueHash(String genesisOpaqueHash) {
    this.genesisOpaqueHash = genesisOpaqueHash;
    return this;
  }

   /**
   * Get genesisOpaqueHash
   * @return genesisOpaqueHash
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_GENESIS_OPAQUE_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getGenesisOpaqueHash() {
    return genesisOpaqueHash;
  }


  @JsonProperty(JSON_PROPERTY_GENESIS_OPAQUE_HASH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGenesisOpaqueHash(String genesisOpaqueHash) {
    this.genesisOpaqueHash = genesisOpaqueHash;
  }


  public GenesisLedgerProofOriginAllOf batchGroupIdx(Long batchGroupIdx) {
    this.batchGroupIdx = batchGroupIdx;
    return this;
  }

   /**
   * Get batchGroupIdx
   * @return batchGroupIdx
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BATCH_GROUP_IDX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getBatchGroupIdx() {
    return batchGroupIdx;
  }


  @JsonProperty(JSON_PROPERTY_BATCH_GROUP_IDX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBatchGroupIdx(Long batchGroupIdx) {
    this.batchGroupIdx = batchGroupIdx;
  }


  public GenesisLedgerProofOriginAllOf batchGroupName(String batchGroupName) {
    this.batchGroupName = batchGroupName;
    return this;
  }

   /**
   * Get batchGroupName
   * @return batchGroupName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BATCH_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBatchGroupName() {
    return batchGroupName;
  }


  @JsonProperty(JSON_PROPERTY_BATCH_GROUP_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBatchGroupName(String batchGroupName) {
    this.batchGroupName = batchGroupName;
  }


  public GenesisLedgerProofOriginAllOf batchIdx(Long batchIdx) {
    this.batchIdx = batchIdx;
    return this;
  }

   /**
   * Get batchIdx
   * @return batchIdx
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BATCH_IDX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getBatchIdx() {
    return batchIdx;
  }


  @JsonProperty(JSON_PROPERTY_BATCH_IDX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBatchIdx(Long batchIdx) {
    this.batchIdx = batchIdx;
  }


  public GenesisLedgerProofOriginAllOf batchName(String batchName) {
    this.batchName = batchName;
    return this;
  }

   /**
   * Get batchName
   * @return batchName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_BATCH_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBatchName() {
    return batchName;
  }


  @JsonProperty(JSON_PROPERTY_BATCH_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBatchName(String batchName) {
    this.batchName = batchName;
  }


  public GenesisLedgerProofOriginAllOf isEndOfUpdate(Boolean isEndOfUpdate) {
    this.isEndOfUpdate = isEndOfUpdate;
    return this;
  }

   /**
   * Get isEndOfUpdate
   * @return isEndOfUpdate
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_IS_END_OF_UPDATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsEndOfUpdate() {
    return isEndOfUpdate;
  }


  @JsonProperty(JSON_PROPERTY_IS_END_OF_UPDATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsEndOfUpdate(Boolean isEndOfUpdate) {
    this.isEndOfUpdate = isEndOfUpdate;
  }


  /**
   * Return true if this GenesisLedgerProofOrigin_allOf object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GenesisLedgerProofOriginAllOf genesisLedgerProofOriginAllOf = (GenesisLedgerProofOriginAllOf) o;
    return Objects.equals(this.protocolVersionName, genesisLedgerProofOriginAllOf.protocolVersionName) &&
        Objects.equals(this.genesisOpaqueHash, genesisLedgerProofOriginAllOf.genesisOpaqueHash) &&
        Objects.equals(this.batchGroupIdx, genesisLedgerProofOriginAllOf.batchGroupIdx) &&
        Objects.equals(this.batchGroupName, genesisLedgerProofOriginAllOf.batchGroupName) &&
        Objects.equals(this.batchIdx, genesisLedgerProofOriginAllOf.batchIdx) &&
        Objects.equals(this.batchName, genesisLedgerProofOriginAllOf.batchName) &&
        Objects.equals(this.isEndOfUpdate, genesisLedgerProofOriginAllOf.isEndOfUpdate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(protocolVersionName, genesisOpaqueHash, batchGroupIdx, batchGroupName, batchIdx, batchName, isEndOfUpdate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GenesisLedgerProofOriginAllOf {\n");
    sb.append("    protocolVersionName: ").append(toIndentedString(protocolVersionName)).append("\n");
    sb.append("    genesisOpaqueHash: ").append(toIndentedString(genesisOpaqueHash)).append("\n");
    sb.append("    batchGroupIdx: ").append(toIndentedString(batchGroupIdx)).append("\n");
    sb.append("    batchGroupName: ").append(toIndentedString(batchGroupName)).append("\n");
    sb.append("    batchIdx: ").append(toIndentedString(batchIdx)).append("\n");
    sb.append("    batchName: ").append(toIndentedString(batchName)).append("\n");
    sb.append("    isEndOfUpdate: ").append(toIndentedString(isEndOfUpdate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

