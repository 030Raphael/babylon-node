/*
 * Babylon Core API
 * This API is exposed by the Babylon Radix node to give clients access to the Radix Engine, Mempool and State in the node. It is intended for use by node-runners on a private network, and is not intended to be exposed publicly. Heavy load may impact the node's function.  If you require queries against historical ledger state, you may also wish to consider using the [Gateway API](https://betanet-gateway.redoc.ly/). 
 *
 * The version of the OpenAPI document: 0.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.core.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.core.generated.models.LtsAccountBalanceUpdates;
import com.radixdlt.api.core.generated.models.LtsCommittedTransactionStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * The transaction execution receipt
 */
@ApiModel(description = "The transaction execution receipt")
@JsonPropertyOrder({
  LtsBasicOutcome.JSON_PROPERTY_STATUS,
  LtsBasicOutcome.JSON_PROPERTY_ACCOUNT_BALANCE_UPDATES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class LtsBasicOutcome {
  public static final String JSON_PROPERTY_STATUS = "status";
  private LtsCommittedTransactionStatus status;

  public static final String JSON_PROPERTY_ACCOUNT_BALANCE_UPDATES = "account_balance_updates";
  private List<LtsAccountBalanceUpdates> accountBalanceUpdates = new ArrayList<>();

  public LtsBasicOutcome() { 
  }

  public LtsBasicOutcome status(LtsCommittedTransactionStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public LtsCommittedTransactionStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(LtsCommittedTransactionStatus status) {
    this.status = status;
  }


  public LtsBasicOutcome accountBalanceUpdates(List<LtsAccountBalanceUpdates> accountBalanceUpdates) {
    this.accountBalanceUpdates = accountBalanceUpdates;
    return this;
  }

  public LtsBasicOutcome addAccountBalanceUpdatesItem(LtsAccountBalanceUpdates accountBalanceUpdatesItem) {
    this.accountBalanceUpdates.add(accountBalanceUpdatesItem);
    return this;
  }

   /**
   * A list containing all account balance updates
   * @return accountBalanceUpdates
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A list containing all account balance updates")
  @JsonProperty(JSON_PROPERTY_ACCOUNT_BALANCE_UPDATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<LtsAccountBalanceUpdates> getAccountBalanceUpdates() {
    return accountBalanceUpdates;
  }


  @JsonProperty(JSON_PROPERTY_ACCOUNT_BALANCE_UPDATES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAccountBalanceUpdates(List<LtsAccountBalanceUpdates> accountBalanceUpdates) {
    this.accountBalanceUpdates = accountBalanceUpdates;
  }


  /**
   * Return true if this LtsBasicOutcome object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LtsBasicOutcome ltsBasicOutcome = (LtsBasicOutcome) o;
    return Objects.equals(this.status, ltsBasicOutcome.status) &&
        Objects.equals(this.accountBalanceUpdates, ltsBasicOutcome.accountBalanceUpdates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, accountBalanceUpdates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LtsBasicOutcome {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    accountBalanceUpdates: ").append(toIndentedString(accountBalanceUpdates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

