/*
 * Engine State API - Babylon (Anemone)
 * This API provides a complete view of the current ledger state, operating at a relatively low level (i.e. returning Entities' data and type information in a generic way, without interpreting specifics of different native or custom components).  It mirrors how the Radix Engine views the ledger state in its \"System\" layer, and thus can be useful for Scrypto developers, who need to inspect how the Engine models and stores their application's state, or how an interface / authentication scheme of another component looks like. 
 *
 * The version of the OpenAPI document: v0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.engine_state.generated.models;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.radixdlt.api.engine_state.generated.models.EntityType;
import com.radixdlt.api.engine_state.generated.models.SystemType;
import com.radixdlt.api.engine_state.generated.models.UnversionedBlueprintReference;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ListedEntityItem
 */
@JsonPropertyOrder({
  ListedEntityItem.JSON_PROPERTY_ENTITY_ADDRESS,
  ListedEntityItem.JSON_PROPERTY_SYSTEM_TYPE,
  ListedEntityItem.JSON_PROPERTY_ENTITY_TYPE,
  ListedEntityItem.JSON_PROPERTY_IS_GLOBAL,
  ListedEntityItem.JSON_PROPERTY_CREATED_AT_STATE_VERSION,
  ListedEntityItem.JSON_PROPERTY_BLUEPRINT
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ListedEntityItem {
  public static final String JSON_PROPERTY_ENTITY_ADDRESS = "entity_address";
  private String entityAddress;

  public static final String JSON_PROPERTY_SYSTEM_TYPE = "system_type";
  private SystemType systemType;

  public static final String JSON_PROPERTY_ENTITY_TYPE = "entity_type";
  private EntityType entityType;

  public static final String JSON_PROPERTY_IS_GLOBAL = "is_global";
  private Boolean isGlobal;

  public static final String JSON_PROPERTY_CREATED_AT_STATE_VERSION = "created_at_state_version";
  private Long createdAtStateVersion;

  public static final String JSON_PROPERTY_BLUEPRINT = "blueprint";
  private UnversionedBlueprintReference blueprint;

  public ListedEntityItem() { 
  }

  public ListedEntityItem entityAddress(String entityAddress) {
    this.entityAddress = entityAddress;
    return this;
  }

   /**
   * A Bech32m-encoded, human readable rendering of an arbitrary Entity&#39;s address.
   * @return entityAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "A Bech32m-encoded, human readable rendering of an arbitrary Entity's address.")
  @JsonProperty(JSON_PROPERTY_ENTITY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEntityAddress() {
    return entityAddress;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_ADDRESS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntityAddress(String entityAddress) {
    this.entityAddress = entityAddress;
  }


  public ListedEntityItem systemType(SystemType systemType) {
    this.systemType = systemType;
    return this;
  }

   /**
   * Get systemType
   * @return systemType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SYSTEM_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SystemType getSystemType() {
    return systemType;
  }


  @JsonProperty(JSON_PROPERTY_SYSTEM_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSystemType(SystemType systemType) {
    this.systemType = systemType;
  }


  public ListedEntityItem entityType(EntityType entityType) {
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EntityType getEntityType() {
    return entityType;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntityType(EntityType entityType) {
    this.entityType = entityType;
  }


  public ListedEntityItem isGlobal(Boolean isGlobal) {
    this.isGlobal = isGlobal;
    return this;
  }

   /**
   * Whether the entity is a top-level root, or a child of some other entity.
   * @return isGlobal
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Whether the entity is a top-level root, or a child of some other entity.")
  @JsonProperty(JSON_PROPERTY_IS_GLOBAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsGlobal() {
    return isGlobal;
  }


  @JsonProperty(JSON_PROPERTY_IS_GLOBAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsGlobal(Boolean isGlobal) {
    this.isGlobal = isGlobal;
  }


  public ListedEntityItem createdAtStateVersion(Long createdAtStateVersion) {
    this.createdAtStateVersion = createdAtStateVersion;
    return this;
  }

   /**
   * Get createdAtStateVersion
   * minimum: 1
   * maximum: 100000000000000
   * @return createdAtStateVersion
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_CREATED_AT_STATE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getCreatedAtStateVersion() {
    return createdAtStateVersion;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT_STATE_VERSION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAtStateVersion(Long createdAtStateVersion) {
    this.createdAtStateVersion = createdAtStateVersion;
  }


  public ListedEntityItem blueprint(UnversionedBlueprintReference blueprint) {
    this.blueprint = blueprint;
    return this;
  }

   /**
   * Get blueprint
   * @return blueprint
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_BLUEPRINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UnversionedBlueprintReference getBlueprint() {
    return blueprint;
  }


  @JsonProperty(JSON_PROPERTY_BLUEPRINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBlueprint(UnversionedBlueprintReference blueprint) {
    this.blueprint = blueprint;
  }


  /**
   * Return true if this ListedEntityItem object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListedEntityItem listedEntityItem = (ListedEntityItem) o;
    return Objects.equals(this.entityAddress, listedEntityItem.entityAddress) &&
        Objects.equals(this.systemType, listedEntityItem.systemType) &&
        Objects.equals(this.entityType, listedEntityItem.entityType) &&
        Objects.equals(this.isGlobal, listedEntityItem.isGlobal) &&
        Objects.equals(this.createdAtStateVersion, listedEntityItem.createdAtStateVersion) &&
        Objects.equals(this.blueprint, listedEntityItem.blueprint);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityAddress, systemType, entityType, isGlobal, createdAtStateVersion, blueprint);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListedEntityItem {\n");
    sb.append("    entityAddress: ").append(toIndentedString(entityAddress)).append("\n");
    sb.append("    systemType: ").append(toIndentedString(systemType)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    isGlobal: ").append(toIndentedString(isGlobal)).append("\n");
    sb.append("    createdAtStateVersion: ").append(toIndentedString(createdAtStateVersion)).append("\n");
    sb.append("    blueprint: ").append(toIndentedString(blueprint)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

