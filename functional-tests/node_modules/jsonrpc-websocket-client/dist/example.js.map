{"version":3,"sources":["../src/example.js"],"names":["client","on","open","spyEvents","main","defaultOnEvent","name","console","log","emitter","onEvent","originalEmit","emit","Object","getPrototypeOf","apply","arguments","then","setTimeout","process","exit","unref","error","stack"],"mappings":";;;qEAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACQA,kBADR,GACiB,eAAW,sBAAX,CADjB;;AAEEA,mBAAOC,EAAP,CAAU,QAAV,EAAoB,YAAM;AACxBD,qBAAOE,IAAP,CAAY,sBAAZ;AACD,aAFD;AAGAC,sBAAUH,MAAV;;AALF;AAAA,mBAOQA,OAAOE,IAAP,CAAY,sBAAZ,CAPR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;kBAAeE,I;;;;;AAWf;;;AA5BA;;;;;;;;AAEA,SAASC,cAAT,CAAyBC,IAAzB,EAA+B;AAC7BC,UAAQC,GAAR,CAAY,aAAZ,EAA2BF,IAA3B;AACD;;AAED,SAASH,SAAT,CAAoBM,OAApB,EAA6BC,OAA7B,EAAsC;AACpCA,cAAYA,UAAUL,cAAtB;;AAEA,MAAMM,eAAeF,QAAQG,IAA7B;AACAC,SAAOC,cAAP,CAAsBL,OAAtB,EAA+BG,IAA/B,GAAsC,YAAY;AAChDF,YAAQK,KAAR,CAAc,IAAd,EAAoBC,SAApB;;AAEA,WAAOL,aAAaI,KAAb,CAAmBN,OAAnB,EAA4BO,SAA5B,CAAP;AACD,GAJD;AAKD;;AAcDZ,OAAOa,IAAP,CACE,YAAM;AACJC,aAAW,YAAM;AACfX,YAAQC,GAAR,CAAY,cAAZ;AACAW,YAAQC,IAAR,CAAa,CAAb;AACD,GAHD,EAGG,GAHH,EAGQC,KAHR;AAID,CANH,EAOE,UAACC,KAAD,EAAW;AACTf,UAAQe,KAAR,CAAeA,SAASA,MAAMC,KAAhB,IAA0BD,KAAxC;AACAH,UAAQC,IAAR,CAAa,CAAb;AACD,CAVH","file":"example.js","sourcesContent":["import Client, { createBackoff } from './'\n\nfunction defaultOnEvent (name) {\n  console.log('Event: %s()', name)\n}\n\nfunction spyEvents (emitter, onEvent) {\n  onEvent || (onEvent = defaultOnEvent)\n\n  const originalEmit = emitter.emit\n  Object.getPrototypeOf(emitter).emit = function () {\n    onEvent.apply(null, arguments)\n\n    return originalEmit.apply(emitter, arguments)\n  }\n}\n\nasync function main () {\n  const client = new Client('ws://localhost:1025/')\n  client.on('closed', () => {\n    client.open(createBackoff())\n  })\n  spyEvents(client)\n\n  await client.open(createBackoff())\n  // await client.close()\n}\n\n// Run the main function and prints any errors.\nmain().then(\n  () => {\n    setTimeout(() => {\n      console.log('forcing exit')\n      process.exit(0)\n    }, 1e3).unref()\n  },\n  (error) => {\n    console.error((error && error.stack) || error)\n    process.exit(1)\n  }\n)\n"]}