#!/usr/bin/env groovy

/*
 * (C) Copyright 2020 Radix DLT Ltd
 *
 * Radix DLT Ltd licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except in
 * compliance with the License.  You may obtain a copy of the
 * License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied.  See the License for the specific
 * language governing permissions and limitations under the License.
 */

@Library('jenkins-lib@RPNV1-262-Jenkinsfile-setup') _

pipeline {
    tools {
        jdk 'open-jdk-11'
    }
    options {
      timeout(time: 20, unit: 'MINUTES')
    }
    agent {
        label 'master'
    }
    stages {

        stage('Checkout RadixCore') {
           environment {
               BRANCH_CORE = "release/1.0-beta*"
           }
           steps {

                   dir('RadixCore'){
                        deleteDir()
                   }
                   dir('RadixCore@tmp'){
                        deleteDir()
                   }

               sh 'printenv'
                checkout([
                        $class: 'GitSCM',
                        branches: ["${BRANCH}"],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [
                                [$class: 'RelativeTargetDirectory', clean: true, relativeTargetDir: 'RadixCore'],
                                [$class: 'LocalBranch', localBranch: '$BRANCH']
                        ],
                        submoduleCfg: [],
                        userRemoteConfigs: [
                                [credentialsId: '6271ba56-812d-4c72-a89f-89454ba64f1b', url: 'https://github.com/radixdlt/radixdlt-core.git']
                        ]
                ])
            }
        }

        stage('Build and push core image') {
            steps {
                dir('RadixCore'){
                    script {
                        tag = sh(
                                script: '''
                              git describe --abbrev=0 --tags
                            ''', returnStdout: true
                        ).trim()
                        echo tag

                        dockerHelpers.manualPushToDockerHub("radixdlt-core", tag)
                    }
                }
            }
        }

    }
    post {
        always {
            // sendNotifications currentBuild.result
            dir('RadixCore'){
                // deleteDir()
            }

       }

    }
}
