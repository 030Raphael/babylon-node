{
  "openapi": "3.0.0",
  "info": {
    "version": "2.0.0",
    "title": "Radix Gateway API",
    "license": {
      "name": "The Radix License, Version 1.0",
      "url": "https://www.radixfoundation.org/licenses/LICENSE-v1"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/network": {
      "post": {
        "summary": "Get Network",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/NetworkRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The Network",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/NetworkResponse" }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/token": {
      "post": {
        "summary": "Get Token Info",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TokenInfoRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token info",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenInfoResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/account/balances": {
      "post": {
        "summary": "Get Token Balances",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AccountBalancesRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of token balances",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AccountBalancesResponse" }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/account/stakes": {
      "post": {
        "summary": "Get Stake Positions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AccountStakesRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of Stake Positions",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AccountStakesResponse" }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/account/unstakes": {
      "post": {
        "summary": "Get Unstake Positions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AccountUnstakesRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of Unstake Positions",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AccountUnstakesResponse" }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/account/transactions": {
      "post": {
        "summary": "Get Account Transactions",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AccountTransactionsRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "List of Transactions",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AccountTransactionsResponse" }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/validator": {
      "post": {
        "summary": "Get Validator Info",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ValidatorInfoRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Validator Info",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ValidatorInfoResponse" }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/validators": {
      "post": {
        "summary": "Get Validators",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ValidatorsRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Ordered list of validators",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidatorsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/transaction/rules": {
      "post": {
        "summary": "Get Construction Rules",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConstructionRulesRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An unsigned transaction",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConstructionRulesResponse" }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/transaction/build": {
      "post": {
        "summary": "Build Transaction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConstructionBuildRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "An unsigned transaction",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConstructionBuildResponse" }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/transaction/finalize": {
      "post": {
        "summary": "Finalize Transaction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConstructionFinalizeRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Final Signed Transaction",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConstructionFinalizeResponse" }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/transaction/submit": {
      "post": {
        "summary": "Submit Transaction",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/ConstructionSubmitRequest" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Submission",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConstructionSubmitResponse" }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/ConstructionSubmitUnexpectedError" }
              }
            }
          }
        }
      }
    },
    "/transaction/status": {
      "post": {
        "summary": "Get Transaction Status",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Transaction Status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionStatusResponse"
                }
              }
            }
          },
          "500": {
            "description": "Unexpected error",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/UnexpectedError" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountBalancesRequest": {
        "type": "object",
        "required": [ "account_address" ],
        "properties": {
          "account_address": {
            "$ref": "#/components/schemas/AccountAddress"
          }
        },
        "example": {
          "account_address": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88"
        }
      },
      "AccountBalancesResponse": {
        "type": "object",
        "required": [ "staked_and_unstaking_balance", "liquid_balances" ],
        "properties": {
          "staked_and_unstaking_balance": {
            "$ref": "#/components/schemas/TokenAmount"
          },
          "liquid_balances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TokenAmount"
            }
          }
        },
        "example": {
          "staked_and_unstaking_balance": {
            "amount": "0",
            "rri": "xrd_rr1qy5wfsfh"
          },
          "liquid_balances": [
            {
              "amount": "1000000000000000000000",
              "rri": "xrd_rr1qy5wfsfh"
            }
          ]
        }
      },
      "AccountStakesRequest": {
        "type": "object",
        "required": [ "account_address" ],
        "properties": {
          "account_address": {
            "$ref": "#/components/schemas/AccountAddress"
          }
        },
        "example": {
          "account_address": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88"
        }
      },
      "AccountStakesResponse": {
        "type": "object",
        "required": [ "stakes" ],
        "properties": {
          "stakes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountStakeEntry"
            }
          }
        },
        "example": {
          "stakes": [
            {
              "validator_address": "rv1qg923hl7f725cs06eg5gmdcy4pfvpa8mfnjcw669traquj28c96z5w0rld0",
              "delegated_stake": {
                "rri": "xrd_rr1qy5wfsfh",
                "value": "1000000000000000000000"
              }
            }
          ]
        }
      },
      "AccountStakeEntry": {
        "type": "object",
        "required": [ "validator_address", "delegated_stake" ],
        "properties": {
          "validator_address": {
            "$ref": "#/components/schemas/ValidatorAddress"
          },
          "delegated_stake": {
            "$ref": "#/components/schemas/TokenAmount"
          }
        }
      },
      "AccountUnstakesRequest": {
        "type": "object",
        "required": [ "account_address" ],
        "properties": {
          "account_address": {
            "$ref": "#/components/schemas/AccountAddress"
          }
        },
        "example": {
          "account_address": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88"
        }
      },
      "AccountUnstakesResponse": {
        "type": "object",
        "required": [ "unstakes" ],
        "properties": {
          "unstakes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountUnstakeEntry"
            }
          }
        },
        "example": {
          "unstakes": [
            {
              "validator_address": "rv1qg923hl7f725cs06eg5gmdcy4pfvpa8mfnjcw669traquj28c96z5w0rld0",
              "unstaking_amount": {
                "rri": "xrd_rr1qy5wfsfh",
                "value": "1000000000000000000000"
              },
              "epochs_until_unlocked": 1
            }
          ]
        }
      },
      "AccountUnstakeEntry": {
        "type": "object",
        "required": [ "validator_address", "unstaking_amount", "epochs_until_unlocked" ],
        "properties": {
          "validator_address": { "$ref": "#/components/schemas/ValidatorAddress" },
          "unstaking_amount": { "$ref": "#/components/schemas/TokenAmount" },
          "epochs_until_unlocked": { "type": "integer" }
        }
      },
      "AccountTransactionsRequest": {
        "type": "object",
        "required": [ "network", "account_address" ],
        "properties": {
          "network": { "type": "string" },
          "account_address": { "$ref": "#/components/schemas/AccountAddress" },
          "cursor": { "type": "integer" },
          "limit": { "type": "integer" }
        },
        "example": {
          "network": "mainnet",
          "account_address": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88",
          "cursor": 0,
          "limit": 1
        }
      },
      "AccountTransactionsResponse": {
        "type": "object",
        "required": [ "transactions", "total_count" ],
        "properties": {
          "total_count": {
            "type": "integer",
            "minimum": 0
          },
          "next_cursor": {
            "type": "integer",
            "minimum": 0
          },
          "transactions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AccountTransaction"
            }
          }
        },
        "additionalProperties": false,
        "example": {
          "next_cursor": 0,
          "total_count": 1,
          "transactions": [
            {
              "fee_paid": {
                "rri": "xrd_rr1qy5wfsfh",
                "value": "72000000000000000"
              },
              "metadata": {
                "signed_by": {
                  "hex": "02aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b6"
                },
                "hex": "07030e7094728c8d065c5db696977696bea9094f67bcfd4c021f99ec784e24023b0000000c0100210000000000000000000000000000000000000000000000000000ffcb9e57d4000002004506000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000007c13bc4b1c16827082c00000008000002004506000402aa1c49af92a39d15257d7dc43f805f18f9f0ea712450c53e75255f5a0d1d93b601000000000000000000000000000000000000000007ad6192165e31dff02c000002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da329b63364718000000000b015584aed8375f30b22a2203b77dbe15e5dc0a3618fb45ea30ee54a6ebe0054b673a471ad2214b7bd06c4228083643b57e095787c9fb01443e1c3d6890d28f60cf",
                "timestamp": 1627407310726
              },
              "actions": [
                {
                  "amount": {
                    "rri": "xrd_rr1qy5wfsfh",
                    "value": "24000000000000000000000000"
                  },
                  "from": "rdx1qsp258zf47f288g4y47hm3plsp03370safcjg5x98e6j2h66p5we8ds8m7g33",
                  "to": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88",
                  "type": "TransferTokens"
                }
              ]
            }
          ]
        }
      },
      "TransferTokens": {
        "allOf": [
          { "$ref": "#/components/schemas/Action" },
          {
            "type": "object",
            "properties": {
              "from": { "$ref": "#/components/schemas/AccountAddress" },
              "to": { "$ref": "#/components/schemas/AccountAddress" },
              "amount": { "$ref": "#/components/schemas/TokenAmount" }
            }
          }
        ]
      },
      "StakeTokens": {
        "allOf": [
          { "$ref": "#/components/schemas/Action" },
          {
            "type": "object",
            "properties": {
              "from": { "$ref": "#/components/schemas/AccountAddress" },
              "to": { "$ref": "#/components/schemas/ValidatorAddress" },
              "amount": { "$ref": "#/components/schemas/TokenAmount" }
            }
          }
        ]
      },
      "UnstakeTokens": {
        "allOf": [
          { "$ref": "#/components/schemas/Action" },
          {
            "type": "object",
            "properties": {
              "from": { "$ref": "#/components/schemas/ValidatorAddress" },
              "to": { "$ref": "#/components/schemas/AccountAddress" },
              "amount": { "$ref": "#/components/schemas/TokenAmount" }
            }
          }
        ]
      },
      "MintTokens": {
        "allOf": [
          { "$ref": "#/components/schemas/Action" },
          {
            "type": "object",
            "properties": {
              "to": { "$ref": "#/components/schemas/ValidatorAddress" },
              "amount": { "$ref": "#/components/schemas/TokenAmount" }
            }
          }
        ]
      },
      "BurnTokens": {
        "allOf": [
          { "$ref": "#/components/schemas/Action" },
          {
            "type": "object",
            "properties": {
              "from": { "$ref": "#/components/schemas/ValidatorAddress" },
              "amount": { "$ref": "#/components/schemas/TokenAmount" }
            }
          }
        ]
      },
      "Action": {
        "type": "object",
        "required": [ "type" ],
        "properties": {
          "type": { "type": "string" }
        },
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "TransferTokens": "#/components/TransferTokens",
            "StakeTokens": "#/components/StakeTokens",
            "UnstakeTokens": "#/components/UnstakeTokens",
            "MintTokens": "#/components/MintTokens",
            "BurnTokens": "#/components/BurnTokens"
          }
        }
      },
      "ConstructionRulesRequest": {
        "type": "object",
        "example": {
        }
      },
      "ConstructionRulesResponse": {
        "type": "object",
        "properties": {
          "maximum_message_length": {
            "type": "integer"
          },
          "minimum_stake": {
            "$ref": "#/components/schemas/BigInteger"
          },
          "maximum_validator_fee_increase": {
            "$ref": "#/components/schemas/BigInteger"
          }
        }
      },
      "ConstructionBuildRequest": {
        "type": "object",
        "required": [ "actions", "fee_payer" ],
        "properties": {
          "actions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Action" }
          },
          "fee_payer": { "$ref": "#/components/schemas/AccountAddress" },
          "message": { "type": "string" },
          "disable_resource_alloc_and_destroy": { "type": "boolean" }
        },
        "example": {
          "actions": [
            {
              "type": "TransferTokens",
              "from": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88",
              "to": "rdx1qspcvwwuf8s549zyspz683v4n93g9kzpn6u6a9yalwzt00zghg75lmsftwv29",
              "amount": {
                "rri": "xrd_rr1qy5wfsfh",
                "value": "123000000000000000"
              }
            }
          ],
          "feePayer": "rdx1qspacch6qjqy7awspx304sev3n4em302en25jd87yrh4hp47grr692cm0kv88"
        }
      },
      "ConstructionBuildResponse": {
        "type": "object",
        "required": [ "fee", "unsigned_transaction", "payload_to_sign" ],
        "properties": {
          "fee": {
            "$ref": "#/components/schemas/TokenAmount"
          },
          "unsigned_transaction": { "type": "string" },
          "payload_to_sign": { "type": "string" }
        },
        "example": {
          "fee": {
            "value": "72000000000000000",
            "rri": "xrd_rr1qy5wfsfh"
          },
          "unsigned_transaction": "07ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d99337193811842000000020100210000000000000000000000000000000000000000000000000000ffcb9e57d4000002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da329a636aa8c02c00000008000002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da3298ae6ecf94cc8000020045060004038639dc49e14a94448045a3c595996282d8419eb9ae949dfb84b7bc48ba3d4fee0100000000000000000000000000000000000000000000000001b4fbd92b5f800000",
          "payload_to_sign": "28f4cf3b398e0c7256a8042d3c7a024bc308997dbc10db03c5eb6152f16f7673"
        }
      },
      "MempoolFullError": {
        "type": "object"
      },
      "StateConflicError": {
        "type": "object"
      },
      "InvalidTransactionError": {
        "type": "object",
        "properties": {
          "message": { "type": "string" }
        }
      },
      "ConstructionSubmitUnexpectedError": {
        "type": "object",
        "required": [ "message" ],
        "properties": {
          "message": { "type": "string" }
        },
        "discriminator": {
          "propertyName": "message",
          "mapping": {
            "INTERNAL_SERVER_ERROR": "#/components/schemas/InternalServerError",
            "INVALID_JSON": "#/components/schemas/InvalidJsonError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError",
            "MEMPOOL_FULL": "#/components/schemas/MempoolError",
            "STATE_CONFLICT": "#/components/schemas/StateConflictError",
            "INVALID_TRANSACTION": "#/components/schemas/InvalidTransactionError"
          }
        }
      },
      "ConstructionFinalizeRequest": {
        "type": "object",
        "required": [ "unsigned_transaction", "signature" ],
        "properties": {
          "unsignedTransaction": { "type": "string" },
          "signature": {
            "type": "object",
            "required": [ "public_key", "bytes" ],
            "properties": {
              "publicKey": { "type": "string" },
              "bytes": { "type": "string" }
            }
          },
          "submit": {
            "type": "boolean"
          }
        },
        "example": {
          "unsigned_transaction": "07ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d99337193811842000000020100210000000000000000000000000000000000000000000000000000ffcb9e57d4000002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da329a636aa8c02c00000008000002004506000403dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab0100000000000000000000000000000000000000000013da3298ae6ecf94cc8000020045060004038639dc49e14a94448045a3c595996282d8419eb9ae949dfb84b7bc48ba3d4fee0100000000000000000000000000000000000000000000000001b4fbd92b5f800000",
          "signature": {
            "public_key": "03dc62fa04804f75d009a2fac32c8ceb9dc5eaccd54934fe20ef5b86be40c7a2ab",
            "bytes": ""
          }
        }
      },
      "ConstructionFinalizeResponse": {
        "type": "object",
        "required": [ "signed_transaction" ],
        "properties": {
          "signed_transaction": { "type": "string" }
        }
      },
      "ConstructionSubmitRequest": {
        "type": "object",
        "required": [ "signed_transaction" ],
        "properties": {
          "signed_transaction": { "type": "string" }
        }
      },
      "ConstructionSubmitResponse": {
        "type": "object",
        "required": [ "transaction_identifier" ],
        "properties": {
          "transaction_identifier": { "type": "string" }
        }
      },
      "NetworkRequest": {
        "type": "object",
        "example": {
        }
      },
      "NetworkResponse": {
        "type": "object",
        "required": [ "network" ],
        "properties": {
          "network": { "type": "string" }
        }
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "exception": { "type": "string" },
          "cause": { "type": "string" }
        }
      },
      "InvalidJsonError": {
        "type": "object",
        "properties": {
          "cause": { "type": "string" }
        }
      },
      "InvalidRequestError": {
        "type": "object",
        "properties": {
          "pointer": { "type": "string" },
          "cause": { "type": "string" }
        }
      },
      "UnexpectedError": {
        "type": "object",
        "required": [ "message" ],
        "properties": {
          "message": { "type": "string" }
        },
        "discriminator": {
          "propertyName": "message",
          "mapping": {
            "INTERNAL_SERVER_ERROR": "#/components/schemas/InternalServerError",
            "INVALID_JSON": "#/components/schemas/InvalidJsonError",
            "INVALID_REQUEST": "#/components/schemas/InvalidRequestError"
          }
        }
      },
      "TokenInfoRequest": {
        "type": "object",
        "properties": {
          "rri": {
            "$ref": "#/components/schemas/ResourceIdentifier"
          }
        },
        "additionalProperties": false,
        "example": {
          "rri": "xrd_rr1qy5wfsfh"
        }
      },
      "TokenInfoResponse": {
        "type": "object",
        "required": [ "token" ],
        "properties": {
          "token": {
            "type": "array",
            "maxItems": 1,
            "items": {
              "$ref": "#/components/schemas/Token"
            }
          }
        },
        "example": {
          "token": [
            {
              "rri": "xrd_rr1qy5wfsfh",
              "supply": {
                "rri": "xrd_rr1qy5wfsfh",
                "value": "12014560679861300000000000000"
              },
              "info": {
                "total_burned": "11437173800000000000000",
                "total_minted": "12014572117035100000000000000"
              },
              "properties": {
                "icon_url": "https://assets.radixdlt.com/icons/icon-xrd-32x32.png",
                "is_supply_mutable": true,
                "symbol": "xrd",
                "granularity": "1",
                "name": "Radix",
                "description": "The Radix Public Network's native token, used to pay the network's required transaction fees and to secure the network through staking to its validator nodes.",
                "url": "https://tokens.radixdlt.com"
              }
            }
          ]
        }
      },
      "TransactionInfoRequest": {
        "type": "object",
        "required": [ "transactionIdentifier" ],
        "properties": {
          "transactionIdentifier": { "type": "string" }
        },
        "example": {
          "transactionIdentifier": "ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d99337193811842"
        }
      },
      "TransactionInfoResponse": {
        "type": "object",
        "required": [ "transaction" ],
        "properties": {
          "transaction": {
            "type": "array",
            "maxItems": 1,
            "items": {
              "$ref": "#/components/schemas/AccountTransaction"
            }
          }
        }
      },
      "TransactionStatusRequest": {
        "type": "object",
        "required": [ "transactionIdentifier" ],
        "properties": {
          "transactionIdentifier": { "type": "string" }
        },
        "additionalProperties": false,
        "example": {
          "transactionIdentifier": "ef71a9d6c63444fce6abd2df8fab2755cfb51f6794e578f60d99337193811842"
        }
      },
      "TransactionStatusResponse": {
        "type": "object",
        "required": [ "status" ],
        "properties": {
          "status": {
            "type": "string",
            "enum": [ "MEMPOOL", "COMMITTED", "FAILED", "NOT_FOUND" ]
          }
        },
        "additionalProperties": false,
        "example": {
          "status": "COMMITTED"
        }
      },
      "ValidatorInfoRequest": {
        "type": "object",
        "required": [ "validator_address" ],
        "properties": {
          "validator_address": { "$ref": "#/components/schemas/ValidatorAddress" }
        },
        "example": {
          "validator_address": "rv1qf2x63qx4jdaxj83kkw2yytehvvmu6r2xll5gcp6c9rancmrfsgfwttnczx"
        }
      },
      "ValidatorInfoResponse": {
        "type": "object",
        "properties": {
          "validator": {
            "$ref": "#/components/schemas/Validator"
          }
        },
        "additionalProperties": false,
        "example": {
          "validator": {
            "stake": {
              "exitingOwnership": "0",
              "currentStake": "100000000000000000000",
              "currentOwnership": "100000000000000000000",
              "nextEpochEstimatedOwnerStake": "0",
              "preparedStake": "0",
              "nextEpochEstimatedStake": "100000000000000000000"
            },
            "properties": {
              "address": "rv1qf2x63qx4jdaxj83kkw2yytehvvmu6r2xll5gcp6c9rancmrfsgfwttnczx",
              "infoURL": "https://learn.radixdlt.com/article/will-the-radix-foundation-operate-validator-nodes",
              "validatorFee": "100.0",
              "name": "Radix Foundation eu-west-1 node0 mainnet",
              "registered": true,
              "ownerAddress": "rdx1qspldshtx0s2l2rcnaqtqpqz8vwps2y6d9se0wq25xrg92l66cmp6mcnc6pyu",
              "externalStakeAccepted": false
            },
            "uptime": {
              "uptimePercentage": "100.00",
              "proposalsMissed": 0,
              "proposalsCompleted": 108320
            }
          }
        }
      },
      "ValidatorsRequest": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "integer",
            "minimum": 1
          },
          "offset": {
            "type": "integer",
            "minimum": 0
          }
        },
        "additionalProperties": false,
        "example": {
          "limit": 10
        }
      },
      "ValidatorsResponse": {
        "type": "object",
        "required": [ "validators" ],
        "properties": {
          "validators": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Validator"
            }
          },
          "nextOffset": {
            "type": "integer",
            "minimum": 0
          }
        },
        "additionalProperties": false,
        "example": {
          "validators": [
            {
              "stake": {
                "exitingOwnership": "0",
                "currentStake": "100000000000000000000",
                "currentOwnership": "100000000000000000000",
                "nextEpochEstimatedOwnerStake": "0",
                "preparedStake": "0",
                "nextEpochEstimatedStake": "100000000000000000000"
              },
              "properties": {
                "address": "rv1qf2x63qx4jdaxj83kkw2yytehvvmu6r2xll5gcp6c9rancmrfsgfwttnczx",
                "infoURL": "https://learn.radixdlt.com/article/will-the-radix-foundation-operate-validator-nodes",
                "validatorFee": "100.0",
                "name": "Radix Foundation eu-west-1 node0 mainnet",
                "registered": true,
                "ownerAddress": "rdx1qspldshtx0s2l2rcnaqtqpqz8vwps2y6d9se0wq25xrg92l66cmp6mcnc6pyu",
                "externalStakeAccepted": false
              },
              "uptime": {
                "uptimePercentage": "100.00",
                "proposalsMissed": 0,
                "proposalsCompleted": 108320
              }
            }
          ]
        }
      },
      "Validator": {
        "type": "object",
        "required": [
          "validator_address",
          "stake",
          "owner_stake"
        ],
        "properties": {
          "validator_address": {
            "$ref": "#/components/schemas/ValidatorAddress"
          },
          "stake": {
            "$ref": "#/components/schemas/TokenAmount"
          },
          "info": {
            "type": "object",
            "properties": {
              "owner_stake": {
                "$ref": "#/components/schemas/TokenAmount"
              },
              "uptime": {
                "type": "object",
                "required": [ "uptime_percentage", "proposals_missed", "proposals_completed" ],
                "properties": {
                  "uptime_percentage": { "type": "string" },
                  "proposals_missed": {
                    "type": "integer",
                    "minimum": 0
                  },
                  "proposals_completed": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              }
            }
          },
          "properties": {
            "type": "object",
            "required": [
              "url",
              "validator_fee",
              "name",
              "registered",
              "owner_address",
              "external_stake_accepted"
            ],
            "properties": {
              "url": { "type": "string" },
              "validator_fee": { "type": "string" },
              "name": { "type": "string" },
              "registered": { "type": "boolean" },
              "owner_address": { "$ref": "#/components/schemas/AccountAddress" },
              "external_stake_accepted": { "type": "boolean" }
            }
          }

        },
        "additionalProperties": false,
        "example": {
          "validator_address": "rv1qf2x63qx4jdaxj83kkw2yytehvvmu6r2xll5gcp6c9rancmrfsgfwttnczx",
          "stake": {
            "rri": "xrd_rr1qy5wfsfh",
            "value": "100000000000000000000"
          },
          "properties": {
            "url": "https://learn.radixdlt.com/article/will-the-radix-foundation-operate-validator-nodes",
            "validator_fee": "100.0",
            "name": "Radix Foundation eu-west-1 node0 mainnet",
            "registered": true,
            "owner_address": "rdx1qspldshtx0s2l2rcnaqtqpqz8vwps2y6d9se0wq25xrg92l66cmp6mcnc6pyu",
            "external_stake_accepted": false
          },
          "info": {
            "owner_stake": {
              "rri": "xrd_rr1qy5wfsfh",
              "value": "0"
            },
            "uptime": {
              "uptime_percentage": "100.00",
              "proposals_missed": 0,
              "proposals_completed": 108320
            }
          }
        }
      },
      "Token": {
        "type": "object",
        "required": [ "accounting", "properties" ],
        "properties": {
          "rri": { "$ref": "#/components/schemas/ResourceIdentifier" },
          "supply": {
            "$ref": "#/components/schemas/TokenAmount"
          },
          "info": {
            "type": "object",
            "properties": {
              "totalMinted": { "$ref": "#/components/schemas/BigInteger" },
              "totalBurned": { "$ref": "#/components/schemas/BigInteger" }
            }
          },
          "properties": {
            "type": "object",
            "required": [
              "name",
              "description",
              "icon_url",
              "url",
              "symbol",
              "is_supply_mutable",
              "granularity"
            ],
            "properties": {
              "name": { "type": "string" },
              "description": { "type": "string" },
              "icon_url": { "type": "string" },
              "url": { "type": "string" },
              "symbol": { "type": "string" },
              "is_supply_mutable": { "type": "boolean" },
              "granularity": { "$ref": "#/components/schemas/BigInteger" }
            }
          }
        },
        "example": {
          "rri": "xrd_rr1qy5wfsfh",
          "supply": {
            "rri": "xrd_rr1qy5wfsfh",
            "value": "12014560679861300000000000000"
          },
          "info": {
            "total_burned": "11437173800000000000000",
            "total_minted": "12014572117035100000000000000"
          },
          "properties": {
            "icon_url": "https://assets.radixdlt.com/icons/icon-xrd-32x32.png",
            "is_supply_mutable": true,
            "symbol": "xrd",
            "granularity": "1",
            "name": "Radix",
            "description": "The Radix Public Network's native token, used to pay the network's required transaction fees and to secure the network through staking to its validator nodes.",
            "url": "https://tokens.radixdlt.com"
          }
        }
      },
      "TransactionIdentifier": {
        "type": "string",
        "pattern": "^[0123456789abcdef]{64}$",
        "maxLength": 64,
        "minLength": 64
      },
      "AccountTransaction": {
        "type": "object",
        "required": [
          "transaction_identifier",
          "actions",
          "metadata"
        ],
        "properties": {
          "transaction_identifier": { "$ref": "#/components/schemas/TransactionIdentifier" },
          "actions": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/Action" }
          },
          "metadata": { "$ref": "#/components/schemas/AccountTransactionMetadata" }
        }
      },
      "AccountTransactionMetadata": {
        "type": "object",
        "required": [ "size", "hex", "timestamp" ],
        "properties": {
          "size": { "type": "integer" },
          "hex": { "type": "string" },
          "timestamp": { "type": "integer" },
          "message": { "type": "string" }
        }
      },
      "TokenAmount": {
        "type": "object",
        "properties": {
          "amount": { "$ref": "#/components/schemas/BigInteger" },
          "rri": { "$ref": "#/components/schemas/ResourceIdentifier" }
        }
      },
      "BigInteger": {
        "type": "string",
        "pattern": "^-?[0-9]+$"
      },
      "AccountAddress": {
        "type": "string",
        "pattern": "^(r|t|d)dx[0-9]?1[023456789ACDEFGHJKLMNPQRSTUVWXYZacdefghjklmnpqrstuvwxyz]{6,69}$"
      },
      "ValidatorAddress": {
        "type": "string",
        "pattern": "^(r|t|d)v[0-9]?1[023456789ACDEFGHJKLMNPQRSTUVWXYZacdefghjklmnpqrstuvwxyz]{6,69}$"
      },
      "ResourceIdentifier": {
        "type": "string",
        "pattern": "^[!\\\"#$%&'()*+,-.\\/0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ\\[\\\\\\]\\^_`abcdefghijklmnopqrstuvwxyz{|}~]{1,83}_r[rb]1[023456789ACDEFGHJKLMNPQRSTUVWXYZacdefghjklmnpqrstuvwxyz]{6,90}$"
      }
    }
  }
}