/*
 * Radix Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.gateway.openapitools.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * AccountBalances
 */
@JsonPropertyOrder({
  AccountBalances.JSON_PROPERTY_STAKED_AND_UNSTAKING_BALANCE,
  AccountBalances.JSON_PROPERTY_LIQUID_BALANCES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-27T00:28:54.766735-06:00[America/Chicago]")
public class AccountBalances {
  public static final String JSON_PROPERTY_STAKED_AND_UNSTAKING_BALANCE = "staked_and_unstaking_balance";
  private TokenAmount stakedAndUnstakingBalance;

  public static final String JSON_PROPERTY_LIQUID_BALANCES = "liquid_balances";
  private List<TokenAmount> liquidBalances = new ArrayList<>();


  public AccountBalances stakedAndUnstakingBalance(TokenAmount stakedAndUnstakingBalance) {
    this.stakedAndUnstakingBalance = stakedAndUnstakingBalance;
    return this;
  }

   /**
   * Get stakedAndUnstakingBalance
   * @return stakedAndUnstakingBalance
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_STAKED_AND_UNSTAKING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenAmount getStakedAndUnstakingBalance() {
    return stakedAndUnstakingBalance;
  }


  @JsonProperty(JSON_PROPERTY_STAKED_AND_UNSTAKING_BALANCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStakedAndUnstakingBalance(TokenAmount stakedAndUnstakingBalance) {
    this.stakedAndUnstakingBalance = stakedAndUnstakingBalance;
  }


  public AccountBalances liquidBalances(List<TokenAmount> liquidBalances) {
    this.liquidBalances = liquidBalances;
    return this;
  }

  public AccountBalances addLiquidBalancesItem(TokenAmount liquidBalancesItem) {
    this.liquidBalances.add(liquidBalancesItem);
    return this;
  }

   /**
   * Get liquidBalances
   * @return liquidBalances
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_LIQUID_BALANCES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<TokenAmount> getLiquidBalances() {
    return liquidBalances;
  }


  @JsonProperty(JSON_PROPERTY_LIQUID_BALANCES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLiquidBalances(List<TokenAmount> liquidBalances) {
    this.liquidBalances = liquidBalances;
  }


  /**
   * Return true if this AccountBalances object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountBalances accountBalances = (AccountBalances) o;
    return Objects.equals(this.stakedAndUnstakingBalance, accountBalances.stakedAndUnstakingBalance) &&
        Objects.equals(this.liquidBalances, accountBalances.liquidBalances);
  }

  @Override
  public int hashCode() {
    return Objects.hash(stakedAndUnstakingBalance, liquidBalances);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountBalances {\n");
    sb.append("    stakedAndUnstakingBalance: ").append(toIndentedString(stakedAndUnstakingBalance)).append("\n");
    sb.append("    liquidBalances: ").append(toIndentedString(liquidBalances)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

