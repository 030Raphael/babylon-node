/*
 * Radix Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.gateway.openapitools.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;


/**
 * AccountTransaction
 */
@JsonPropertyOrder({
  AccountTransaction.JSON_PROPERTY_TRANSACTION_STATUS,
  AccountTransaction.JSON_PROPERTY_TRANSACTION_IDENTIFIER,
  AccountTransaction.JSON_PROPERTY_ACTIONS,
  AccountTransaction.JSON_PROPERTY_FEE_PAID,
  AccountTransaction.JSON_PROPERTY_METADATA
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-25T22:01:18.117974-06:00[America/Chicago]")
public class AccountTransaction {
  public static final String JSON_PROPERTY_TRANSACTION_STATUS = "transaction_status";
  private AccountTransactionStatus transactionStatus;

  public static final String JSON_PROPERTY_TRANSACTION_IDENTIFIER = "transaction_identifier";
  private TransactionIdentifier transactionIdentifier;

  public static final String JSON_PROPERTY_ACTIONS = "actions";
  private List<Action> actions = new ArrayList<>();

  public static final String JSON_PROPERTY_FEE_PAID = "fee_paid";
  private TokenAmount feePaid;

  public static final String JSON_PROPERTY_METADATA = "metadata";
  private AccountTransactionMetadata metadata;


  public AccountTransaction transactionStatus(AccountTransactionStatus transactionStatus) {
    this.transactionStatus = transactionStatus;
    return this;
  }

   /**
   * Get transactionStatus
   * @return transactionStatus
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AccountTransactionStatus getTransactionStatus() {
    return transactionStatus;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionStatus(AccountTransactionStatus transactionStatus) {
    this.transactionStatus = transactionStatus;
  }


  public AccountTransaction transactionIdentifier(TransactionIdentifier transactionIdentifier) {
    this.transactionIdentifier = transactionIdentifier;
    return this;
  }

   /**
   * Get transactionIdentifier
   * @return transactionIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TRANSACTION_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TransactionIdentifier getTransactionIdentifier() {
    return transactionIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionIdentifier(TransactionIdentifier transactionIdentifier) {
    this.transactionIdentifier = transactionIdentifier;
  }


  public AccountTransaction actions(List<Action> actions) {
    this.actions = actions;
    return this;
  }

  public AccountTransaction addActionsItem(Action actionsItem) {
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Action> getActions() {
    return actions;
  }


  @JsonProperty(JSON_PROPERTY_ACTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setActions(List<Action> actions) {
    this.actions = actions;
  }


  public AccountTransaction feePaid(TokenAmount feePaid) {
    this.feePaid = feePaid;
    return this;
  }

   /**
   * Get feePaid
   * @return feePaid
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_FEE_PAID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenAmount getFeePaid() {
    return feePaid;
  }


  @JsonProperty(JSON_PROPERTY_FEE_PAID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFeePaid(TokenAmount feePaid) {
    this.feePaid = feePaid;
  }


  public AccountTransaction metadata(AccountTransactionMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AccountTransactionMetadata getMetadata() {
    return metadata;
  }


  @JsonProperty(JSON_PROPERTY_METADATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMetadata(AccountTransactionMetadata metadata) {
    this.metadata = metadata;
  }


  /**
   * Return true if this AccountTransaction object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountTransaction accountTransaction = (AccountTransaction) o;
    return Objects.equals(this.transactionStatus, accountTransaction.transactionStatus) &&
        Objects.equals(this.transactionIdentifier, accountTransaction.transactionIdentifier) &&
        Objects.equals(this.actions, accountTransaction.actions) &&
        Objects.equals(this.feePaid, accountTransaction.feePaid) &&
        Objects.equals(this.metadata, accountTransaction.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transactionStatus, transactionIdentifier, actions, feePaid, metadata);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountTransaction {\n");
    sb.append("    transactionStatus: ").append(toIndentedString(transactionStatus)).append("\n");
    sb.append("    transactionIdentifier: ").append(toIndentedString(transactionIdentifier)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("    feePaid: ").append(toIndentedString(feePaid)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

