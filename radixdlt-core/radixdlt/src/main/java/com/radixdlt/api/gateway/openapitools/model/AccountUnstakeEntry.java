/*
 * Radix Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.gateway.openapitools.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * AccountUnstakeEntry
 */
@JsonPropertyOrder({
  AccountUnstakeEntry.JSON_PROPERTY_VALIDATOR_IDENTIFIER,
  AccountUnstakeEntry.JSON_PROPERTY_UNSTAKING_AMOUNT,
  AccountUnstakeEntry.JSON_PROPERTY_EPOCHS_UNTIL_UNLOCKED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-27T01:21:01.645550-06:00[America/Chicago]")
public class AccountUnstakeEntry {
  public static final String JSON_PROPERTY_VALIDATOR_IDENTIFIER = "validator_identifier";
  private ValidatorIdentifier validatorIdentifier;

  public static final String JSON_PROPERTY_UNSTAKING_AMOUNT = "unstaking_amount";
  private TokenAmount unstakingAmount;

  public static final String JSON_PROPERTY_EPOCHS_UNTIL_UNLOCKED = "epochs_until_unlocked";
  private Long epochsUntilUnlocked;


  public AccountUnstakeEntry validatorIdentifier(ValidatorIdentifier validatorIdentifier) {
    this.validatorIdentifier = validatorIdentifier;
    return this;
  }

   /**
   * Get validatorIdentifier
   * @return validatorIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VALIDATOR_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ValidatorIdentifier getValidatorIdentifier() {
    return validatorIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATOR_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidatorIdentifier(ValidatorIdentifier validatorIdentifier) {
    this.validatorIdentifier = validatorIdentifier;
  }


  public AccountUnstakeEntry unstakingAmount(TokenAmount unstakingAmount) {
    this.unstakingAmount = unstakingAmount;
    return this;
  }

   /**
   * Get unstakingAmount
   * @return unstakingAmount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_UNSTAKING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenAmount getUnstakingAmount() {
    return unstakingAmount;
  }


  @JsonProperty(JSON_PROPERTY_UNSTAKING_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUnstakingAmount(TokenAmount unstakingAmount) {
    this.unstakingAmount = unstakingAmount;
  }


  public AccountUnstakeEntry epochsUntilUnlocked(Long epochsUntilUnlocked) {
    this.epochsUntilUnlocked = epochsUntilUnlocked;
    return this;
  }

   /**
   * Get epochsUntilUnlocked
   * @return epochsUntilUnlocked
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EPOCHS_UNTIL_UNLOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getEpochsUntilUnlocked() {
    return epochsUntilUnlocked;
  }


  @JsonProperty(JSON_PROPERTY_EPOCHS_UNTIL_UNLOCKED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEpochsUntilUnlocked(Long epochsUntilUnlocked) {
    this.epochsUntilUnlocked = epochsUntilUnlocked;
  }


  /**
   * Return true if this AccountUnstakeEntry object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountUnstakeEntry accountUnstakeEntry = (AccountUnstakeEntry) o;
    return Objects.equals(this.validatorIdentifier, accountUnstakeEntry.validatorIdentifier) &&
        Objects.equals(this.unstakingAmount, accountUnstakeEntry.unstakingAmount) &&
        Objects.equals(this.epochsUntilUnlocked, accountUnstakeEntry.epochsUntilUnlocked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(validatorIdentifier, unstakingAmount, epochsUntilUnlocked);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountUnstakeEntry {\n");
    sb.append("    validatorIdentifier: ").append(toIndentedString(validatorIdentifier)).append("\n");
    sb.append("    unstakingAmount: ").append(toIndentedString(unstakingAmount)).append("\n");
    sb.append("    epochsUntilUnlocked: ").append(toIndentedString(epochsUntilUnlocked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

