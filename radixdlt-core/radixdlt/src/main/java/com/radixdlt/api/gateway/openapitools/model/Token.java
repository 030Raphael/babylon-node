/*
 * Radix Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.gateway.openapitools.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * Token
 */
@JsonPropertyOrder({
  Token.JSON_PROPERTY_TOKEN_IDENTIFIER,
  Token.JSON_PROPERTY_TOKEN_SUPPLY,
  Token.JSON_PROPERTY_INFO,
  Token.JSON_PROPERTY_TOKEN_PROPERTIES
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-27T01:21:01.645550-06:00[America/Chicago]")
public class Token {
  public static final String JSON_PROPERTY_TOKEN_IDENTIFIER = "token_identifier";
  private TokenIdentifier tokenIdentifier;

  public static final String JSON_PROPERTY_TOKEN_SUPPLY = "token_supply";
  private TokenAmount tokenSupply;

  public static final String JSON_PROPERTY_INFO = "info";
  private TokenInfo info;

  public static final String JSON_PROPERTY_TOKEN_PROPERTIES = "token_properties";
  private TokenProperties tokenProperties;


  public Token tokenIdentifier(TokenIdentifier tokenIdentifier) {
    this.tokenIdentifier = tokenIdentifier;
    return this;
  }

   /**
   * Get tokenIdentifier
   * @return tokenIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TOKEN_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenIdentifier getTokenIdentifier() {
    return tokenIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTokenIdentifier(TokenIdentifier tokenIdentifier) {
    this.tokenIdentifier = tokenIdentifier;
  }


  public Token tokenSupply(TokenAmount tokenSupply) {
    this.tokenSupply = tokenSupply;
    return this;
  }

   /**
   * Get tokenSupply
   * @return tokenSupply
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TOKEN_SUPPLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenAmount getTokenSupply() {
    return tokenSupply;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN_SUPPLY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTokenSupply(TokenAmount tokenSupply) {
    this.tokenSupply = tokenSupply;
  }


  public Token info(TokenInfo info) {
    this.info = info;
    return this;
  }

   /**
   * Get info
   * @return info
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenInfo getInfo() {
    return info;
  }


  @JsonProperty(JSON_PROPERTY_INFO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setInfo(TokenInfo info) {
    this.info = info;
  }


  public Token tokenProperties(TokenProperties tokenProperties) {
    this.tokenProperties = tokenProperties;
    return this;
  }

   /**
   * Get tokenProperties
   * @return tokenProperties
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TOKEN_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TokenProperties getTokenProperties() {
    return tokenProperties;
  }


  @JsonProperty(JSON_PROPERTY_TOKEN_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTokenProperties(TokenProperties tokenProperties) {
    this.tokenProperties = tokenProperties;
  }


  /**
   * Return true if this Token object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Token token = (Token) o;
    return Objects.equals(this.tokenIdentifier, token.tokenIdentifier) &&
        Objects.equals(this.tokenSupply, token.tokenSupply) &&
        Objects.equals(this.info, token.info) &&
        Objects.equals(this.tokenProperties, token.tokenProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tokenIdentifier, tokenSupply, info, tokenProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Token {\n");
    sb.append("    tokenIdentifier: ").append(toIndentedString(tokenIdentifier)).append("\n");
    sb.append("    tokenSupply: ").append(toIndentedString(tokenSupply)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    tokenProperties: ").append(toIndentedString(tokenProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

