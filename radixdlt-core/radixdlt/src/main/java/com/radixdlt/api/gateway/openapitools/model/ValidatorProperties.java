/*
 * Radix Gateway API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.9.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.radixdlt.api.gateway.openapitools.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;


/**
 * ValidatorProperties
 */
@JsonPropertyOrder({
  ValidatorProperties.JSON_PROPERTY_URL,
  ValidatorProperties.JSON_PROPERTY_VALIDATOR_FEE,
  ValidatorProperties.JSON_PROPERTY_NAME,
  ValidatorProperties.JSON_PROPERTY_REGISTERED,
  ValidatorProperties.JSON_PROPERTY_OWNER_ACCOUNT_IDENTIFIER,
  ValidatorProperties.JSON_PROPERTY_EXTERNAL_STAKE_ACCEPTED
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-27T01:49:33.060927-06:00[America/Chicago]")
public class ValidatorProperties {
  public static final String JSON_PROPERTY_URL = "url";
  private String url;

  public static final String JSON_PROPERTY_VALIDATOR_FEE = "validator_fee";
  private String validatorFee;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_REGISTERED = "registered";
  private Boolean registered;

  public static final String JSON_PROPERTY_OWNER_ACCOUNT_IDENTIFIER = "owner_account_identifier";
  private AccountIdentifier ownerAccountIdentifier;

  public static final String JSON_PROPERTY_EXTERNAL_STAKE_ACCEPTED = "external_stake_accepted";
  private Boolean externalStakeAccepted;


  public ValidatorProperties url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getUrl() {
    return url;
  }


  @JsonProperty(JSON_PROPERTY_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUrl(String url) {
    this.url = url;
  }


  public ValidatorProperties validatorFee(String validatorFee) {
    this.validatorFee = validatorFee;
    return this;
  }

   /**
   * Get validatorFee
   * @return validatorFee
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_VALIDATOR_FEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getValidatorFee() {
    return validatorFee;
  }


  @JsonProperty(JSON_PROPERTY_VALIDATOR_FEE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValidatorFee(String validatorFee) {
    this.validatorFee = validatorFee;
  }


  public ValidatorProperties name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ValidatorProperties registered(Boolean registered) {
    this.registered = registered;
    return this;
  }

   /**
   * Get registered
   * @return registered
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_REGISTERED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRegistered() {
    return registered;
  }


  @JsonProperty(JSON_PROPERTY_REGISTERED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRegistered(Boolean registered) {
    this.registered = registered;
  }


  public ValidatorProperties ownerAccountIdentifier(AccountIdentifier ownerAccountIdentifier) {
    this.ownerAccountIdentifier = ownerAccountIdentifier;
    return this;
  }

   /**
   * Get ownerAccountIdentifier
   * @return ownerAccountIdentifier
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_OWNER_ACCOUNT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AccountIdentifier getOwnerAccountIdentifier() {
    return ownerAccountIdentifier;
  }


  @JsonProperty(JSON_PROPERTY_OWNER_ACCOUNT_IDENTIFIER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOwnerAccountIdentifier(AccountIdentifier ownerAccountIdentifier) {
    this.ownerAccountIdentifier = ownerAccountIdentifier;
  }


  public ValidatorProperties externalStakeAccepted(Boolean externalStakeAccepted) {
    this.externalStakeAccepted = externalStakeAccepted;
    return this;
  }

   /**
   * Get externalStakeAccepted
   * @return externalStakeAccepted
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_STAKE_ACCEPTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getExternalStakeAccepted() {
    return externalStakeAccepted;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_STAKE_ACCEPTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExternalStakeAccepted(Boolean externalStakeAccepted) {
    this.externalStakeAccepted = externalStakeAccepted;
  }


  /**
   * Return true if this ValidatorProperties object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidatorProperties validatorProperties = (ValidatorProperties) o;
    return Objects.equals(this.url, validatorProperties.url) &&
        Objects.equals(this.validatorFee, validatorProperties.validatorFee) &&
        Objects.equals(this.name, validatorProperties.name) &&
        Objects.equals(this.registered, validatorProperties.registered) &&
        Objects.equals(this.ownerAccountIdentifier, validatorProperties.ownerAccountIdentifier) &&
        Objects.equals(this.externalStakeAccepted, validatorProperties.externalStakeAccepted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, validatorFee, name, registered, ownerAccountIdentifier, externalStakeAccepted);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidatorProperties {\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    validatorFee: ").append(toIndentedString(validatorFee)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    registered: ").append(toIndentedString(registered)).append("\n");
    sb.append("    ownerAccountIdentifier: ").append(toIndentedString(ownerAccountIdentifier)).append("\n");
    sb.append("    externalStakeAccepted: ").append(toIndentedString(externalStakeAccepted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

