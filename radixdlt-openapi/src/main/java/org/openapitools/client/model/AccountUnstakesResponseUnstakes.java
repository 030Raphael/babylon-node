/*
 * Wallet/Explorer Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * AccountUnstakesResponseUnstakes
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-25T08:11:19.875906-07:00[America/Los_Angeles]")
public class AccountUnstakesResponseUnstakes {
  public static final String SERIALIZED_NAME_VALIDATOR_ADDRESS = "validatorAddress";
  @SerializedName(SERIALIZED_NAME_VALIDATOR_ADDRESS)
  private String validatorAddress;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_EPOCHS_UNTIL = "epochsUntil";
  @SerializedName(SERIALIZED_NAME_EPOCHS_UNTIL)
  private Integer epochsUntil;


  public AccountUnstakesResponseUnstakes validatorAddress(String validatorAddress) {
    
    this.validatorAddress = validatorAddress;
    return this;
  }

   /**
   * Get validatorAddress
   * @return validatorAddress
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getValidatorAddress() {
    return validatorAddress;
  }


  public void setValidatorAddress(String validatorAddress) {
    this.validatorAddress = validatorAddress;
  }


  public AccountUnstakesResponseUnstakes amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    this.amount = amount;
  }


  public AccountUnstakesResponseUnstakes epochsUntil(Integer epochsUntil) {
    
    this.epochsUntil = epochsUntil;
    return this;
  }

   /**
   * Get epochsUntil
   * @return epochsUntil
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEpochsUntil() {
    return epochsUntil;
  }


  public void setEpochsUntil(Integer epochsUntil) {
    this.epochsUntil = epochsUntil;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountUnstakesResponseUnstakes accountUnstakesResponseUnstakes = (AccountUnstakesResponseUnstakes) o;
    return Objects.equals(this.validatorAddress, accountUnstakesResponseUnstakes.validatorAddress) &&
        Objects.equals(this.amount, accountUnstakesResponseUnstakes.amount) &&
        Objects.equals(this.epochsUntil, accountUnstakesResponseUnstakes.epochsUntil);
  }

  @Override
  public int hashCode() {
    return Objects.hash(validatorAddress, amount, epochsUntil);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountUnstakesResponseUnstakes {\n");
    sb.append("    validatorAddress: ").append(toIndentedString(validatorAddress)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    epochsUntil: ").append(toIndentedString(epochsUntil)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

