/*
 * Wallet/Explorer Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ValidatorStake
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-10-25T08:11:19.875906-07:00[America/Los_Angeles]")
public class ValidatorStake {
  public static final String SERIALIZED_NAME_EXITING_OWNERSHIP = "exitingOwnership";
  @SerializedName(SERIALIZED_NAME_EXITING_OWNERSHIP)
  private String exitingOwnership;

  public static final String SERIALIZED_NAME_CURRENT_OWNERSHIP = "currentOwnership";
  @SerializedName(SERIALIZED_NAME_CURRENT_OWNERSHIP)
  private String currentOwnership;

  public static final String SERIALIZED_NAME_CURRENT_STAKE = "currentStake";
  @SerializedName(SERIALIZED_NAME_CURRENT_STAKE)
  private String currentStake;

  public static final String SERIALIZED_NAME_PREPARED_STAKE = "preparedStake";
  @SerializedName(SERIALIZED_NAME_PREPARED_STAKE)
  private String preparedStake;

  public static final String SERIALIZED_NAME_NEXT_EPOCH_ESTIMATED_STAKE = "nextEpochEstimatedStake";
  @SerializedName(SERIALIZED_NAME_NEXT_EPOCH_ESTIMATED_STAKE)
  private String nextEpochEstimatedStake;

  public static final String SERIALIZED_NAME_NEXT_EPOCH_ESTIMATED_OWNER_STAKE = "nextEpochEstimatedOwnerStake";
  @SerializedName(SERIALIZED_NAME_NEXT_EPOCH_ESTIMATED_OWNER_STAKE)
  private String nextEpochEstimatedOwnerStake;


  public ValidatorStake exitingOwnership(String exitingOwnership) {
    
    this.exitingOwnership = exitingOwnership;
    return this;
  }

   /**
   * Get exitingOwnership
   * @return exitingOwnership
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getExitingOwnership() {
    return exitingOwnership;
  }


  public void setExitingOwnership(String exitingOwnership) {
    this.exitingOwnership = exitingOwnership;
  }


  public ValidatorStake currentOwnership(String currentOwnership) {
    
    this.currentOwnership = currentOwnership;
    return this;
  }

   /**
   * Get currentOwnership
   * @return currentOwnership
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCurrentOwnership() {
    return currentOwnership;
  }


  public void setCurrentOwnership(String currentOwnership) {
    this.currentOwnership = currentOwnership;
  }


  public ValidatorStake currentStake(String currentStake) {
    
    this.currentStake = currentStake;
    return this;
  }

   /**
   * Get currentStake
   * @return currentStake
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getCurrentStake() {
    return currentStake;
  }


  public void setCurrentStake(String currentStake) {
    this.currentStake = currentStake;
  }


  public ValidatorStake preparedStake(String preparedStake) {
    
    this.preparedStake = preparedStake;
    return this;
  }

   /**
   * Get preparedStake
   * @return preparedStake
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getPreparedStake() {
    return preparedStake;
  }


  public void setPreparedStake(String preparedStake) {
    this.preparedStake = preparedStake;
  }


  public ValidatorStake nextEpochEstimatedStake(String nextEpochEstimatedStake) {
    
    this.nextEpochEstimatedStake = nextEpochEstimatedStake;
    return this;
  }

   /**
   * Get nextEpochEstimatedStake
   * @return nextEpochEstimatedStake
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getNextEpochEstimatedStake() {
    return nextEpochEstimatedStake;
  }


  public void setNextEpochEstimatedStake(String nextEpochEstimatedStake) {
    this.nextEpochEstimatedStake = nextEpochEstimatedStake;
  }


  public ValidatorStake nextEpochEstimatedOwnerStake(String nextEpochEstimatedOwnerStake) {
    
    this.nextEpochEstimatedOwnerStake = nextEpochEstimatedOwnerStake;
    return this;
  }

   /**
   * Get nextEpochEstimatedOwnerStake
   * @return nextEpochEstimatedOwnerStake
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getNextEpochEstimatedOwnerStake() {
    return nextEpochEstimatedOwnerStake;
  }


  public void setNextEpochEstimatedOwnerStake(String nextEpochEstimatedOwnerStake) {
    this.nextEpochEstimatedOwnerStake = nextEpochEstimatedOwnerStake;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidatorStake validatorStake = (ValidatorStake) o;
    return Objects.equals(this.exitingOwnership, validatorStake.exitingOwnership) &&
        Objects.equals(this.currentOwnership, validatorStake.currentOwnership) &&
        Objects.equals(this.currentStake, validatorStake.currentStake) &&
        Objects.equals(this.preparedStake, validatorStake.preparedStake) &&
        Objects.equals(this.nextEpochEstimatedStake, validatorStake.nextEpochEstimatedStake) &&
        Objects.equals(this.nextEpochEstimatedOwnerStake, validatorStake.nextEpochEstimatedOwnerStake);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exitingOwnership, currentOwnership, currentStake, preparedStake, nextEpochEstimatedStake, nextEpochEstimatedOwnerStake);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidatorStake {\n");
    sb.append("    exitingOwnership: ").append(toIndentedString(exitingOwnership)).append("\n");
    sb.append("    currentOwnership: ").append(toIndentedString(currentOwnership)).append("\n");
    sb.append("    currentStake: ").append(toIndentedString(currentStake)).append("\n");
    sb.append("    preparedStake: ").append(toIndentedString(preparedStake)).append("\n");
    sb.append("    nextEpochEstimatedStake: ").append(toIndentedString(nextEpochEstimatedStake)).append("\n");
    sb.append("    nextEpochEstimatedOwnerStake: ").append(toIndentedString(nextEpochEstimatedOwnerStake)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

