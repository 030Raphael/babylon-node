/*
 * Wallet/Explorer Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountBalancesRequest;
import org.openapitools.client.model.AccountBalancesResponse;
import org.openapitools.client.model.AccountStakesRequest;
import org.openapitools.client.model.AccountStakesResponse;
import org.openapitools.client.model.AccountTransactionsRequest;
import org.openapitools.client.model.AccountTransactionsResponse;
import org.openapitools.client.model.AccountUnstakesRequest;
import org.openapitools.client.model.AccountUnstakesResponse;
import org.openapitools.client.model.ConstructionBuildRequest;
import org.openapitools.client.model.ConstructionBuildResponse;
import org.openapitools.client.model.ConstructionFinalizeRequest;
import org.openapitools.client.model.ConstructionFinalizeResponse;
import org.openapitools.client.model.ConstructionSubmitRequest;
import org.openapitools.client.model.ConstructionSubmitResponse;
import org.openapitools.client.model.ConstructionSubmitUnexpectedError;
import org.openapitools.client.model.NetworkResponse;
import org.openapitools.client.model.TokenInfoRequest;
import org.openapitools.client.model.TokenInfoResponse;
import org.openapitools.client.model.TransactionInfoRequest;
import org.openapitools.client.model.TransactionInfoResponse;
import org.openapitools.client.model.TransactionStatusRequest;
import org.openapitools.client.model.TransactionStatusResponse;
import org.openapitools.client.model.UnexpectedError;
import org.openapitools.client.model.ValidatorInfoRequest;
import org.openapitools.client.model.ValidatorInfoResponse;
import org.openapitools.client.model.ValidatorsRequest;
import org.openapitools.client.model.ValidatorsResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Get Token Balances
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountBalancesPostTest() throws ApiException {
        AccountBalancesRequest accountBalancesRequest = null;
        AccountBalancesResponse response = api.accountBalancesPost(accountBalancesRequest);

        // TODO: test validations
    }
    
    /**
     * Get Stake Positions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountStakesPostTest() throws ApiException {
        AccountStakesRequest accountStakesRequest = null;
        AccountStakesResponse response = api.accountStakesPost(accountStakesRequest);

        // TODO: test validations
    }
    
    /**
     * Get Account Transactions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountTransactionsPostTest() throws ApiException {
        AccountTransactionsRequest accountTransactionsRequest = null;
        AccountTransactionsResponse response = api.accountTransactionsPost(accountTransactionsRequest);

        // TODO: test validations
    }
    
    /**
     * Get Unstake Positions
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void accountUnstakesPostTest() throws ApiException {
        AccountUnstakesRequest accountUnstakesRequest = null;
        AccountUnstakesResponse response = api.accountUnstakesPost(accountUnstakesRequest);

        // TODO: test validations
    }
    
    /**
     * Build Transaction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void constructionBuildPostTest() throws ApiException {
        ConstructionBuildRequest constructionBuildRequest = null;
        ConstructionBuildResponse response = api.constructionBuildPost(constructionBuildRequest);

        // TODO: test validations
    }
    
    /**
     * Finalize Transaction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void constructionFinalizePostTest() throws ApiException {
        ConstructionFinalizeRequest constructionFinalizeRequest = null;
        ConstructionFinalizeResponse response = api.constructionFinalizePost(constructionFinalizeRequest);

        // TODO: test validations
    }
    
    /**
     * Submit Transaction
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void constructionSubmitPostTest() throws ApiException {
        ConstructionSubmitRequest constructionSubmitRequest = null;
        ConstructionSubmitResponse response = api.constructionSubmitPost(constructionSubmitRequest);

        // TODO: test validations
    }
    
    /**
     * Get Network
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void networkPostTest() throws ApiException {
        Object body = null;
        NetworkResponse response = api.networkPost(body);

        // TODO: test validations
    }
    
    /**
     * Get Token Info
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tokenPostTest() throws ApiException {
        TokenInfoRequest tokenInfoRequest = null;
        TokenInfoResponse response = api.tokenPost(tokenInfoRequest);

        // TODO: test validations
    }
    
    /**
     * Get Transaction Info
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void transactionPostTest() throws ApiException {
        TransactionInfoRequest transactionInfoRequest = null;
        TransactionInfoResponse response = api.transactionPost(transactionInfoRequest);

        // TODO: test validations
    }
    
    /**
     * Get Transaction Status
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void transactionStatusPostTest() throws ApiException {
        TransactionStatusRequest transactionStatusRequest = null;
        TransactionStatusResponse response = api.transactionStatusPost(transactionStatusRequest);

        // TODO: test validations
    }
    
    /**
     * Get Validator Info
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validatorPostTest() throws ApiException {
        ValidatorInfoRequest validatorInfoRequest = null;
        ValidatorInfoResponse response = api.validatorPost(validatorInfoRequest);

        // TODO: test validations
    }
    
    /**
     * Get Validators
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void validatorsPostTest() throws ApiException {
        ValidatorsRequest validatorsRequest = null;
        ValidatorsResponse response = api.validatorsPost(validatorsRequest);

        // TODO: test validations
    }
    
}
